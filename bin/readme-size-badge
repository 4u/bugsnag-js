#!/usr/bin/env node

const browserify = require('browserify')
const uglify = require('uglify-js')
const { gzipSync } = require('zlib')
const { readFileSync, writeFileSync } = require('fs')
const { resolve } = require('path')

const getSize = cb => {
  browserify('browser/index.js', {
    plugin: [ 'bundle-collapser/plugin' ],
    standalone: 'bugsnag'
  }).bundle((err, buf) => {
    if (err) return cb(err)
    try {
      const compressed = uglify.minify(buf.toString(), { ie8: true })
      if (compressed.error) throw compressed.error
      const gzipped = gzipSync(compressed.code)
      const kb = (gzipped.length / 1000).toFixed(2)
      cb(null, kb)
    } catch (e) {
      cb(e)
    }
  })
}

const insert = kb => {
  const readme = readFileSync(resolve(__dirname, '../README.md'), 'utf8')
  const replaced = readme.replace(
    /(<!-- size_start -->)[\s\S]*(<!-- size_end -->)/,
    `$1 ![${kb}kB](https://img.shields.io/badge/size-${kb}kB-green.svg) $2`
  )
  writeFileSync(resolve(__dirname, '../README.md'), replaced, 'utf8')
}

getSize((err, kb) => {
  if (err) throw err
  insert(kb)
})
