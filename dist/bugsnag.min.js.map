{"version":3,"sources":["node_modules/browser-pack-flat/_prelude","browser/plugins/interaction-breadcrumbs.js","node_modules/fast-safe-stringify/index.js","base/lib/es-utils.js","base/breadcrumb.js","base/lib/positive-int-check.js","base/config.js","base/lib/infer-release-stage.js","base/lib/has-stack.js","node_modules/stackframe/stackframe.js","node_modules/error-stack-parser/error-stack-parser.js","node_modules/stack-generator/stack-generator.js","base/report.js","node_modules/cuid/dist/browser-cuid.js","base/session.js","node_modules/iserror/index.js","base/client.js","base/plugins/throttle.js","browser/config.js","browser/plugins/console-breadcrumbs.js","browser/plugins/context.js","browser/plugins/device.js","browser/plugins/inline-script-content.js","browser/plugins/ip.js","browser/plugins/navigation-breadcrumbs.js","browser/plugins/request.js","browser/plugins/sessions.js","browser/plugins/strip-query-string.js","browser/plugins/unhandled-rejection.js","browser/plugins/window-onerror.js","browser/transports/lib/payload.js","browser/transports/x-domain-request.js","browser/transports/xml-http-request.js","browser/index.js","node_modules/browser-pack-flat/_postlude"],"names":["f","exports","module","define","amd","window","global","self","this","bugsnag","getNodeSelector","el","parts","tagName","id","push","className","length","split","join","document","querySelectorAll","Array","prototype","indexOf","e","parentNode","childNodes","index","call","truncate","value","slice","stringify","obj","decirc","JSON","Circle","val","k","parent","count","stack","toJSON","forceDecirc","undefined","i","key","Object","hasOwnProperty","pop","reduce","arr","fn","accum","len","_hasDontEnumBug","toString","propertyIsEnumerable","_dontEnums","_pad","n","_$esUtils_4","map","item","concat","filter","includes","x","keys","result","prop","isArray","isoDate","d","Date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","__isoDate_1","BugsnagBreadcrumb","name","arguments","metaData","type","timestamp","_classCallCheck","_$BugsnagBreadcrumb_1","__includes_7","_$positiveIntCheck_7","parseInt","__filter_3","__reduce_3","__keys_3","__isArray_3","_$config_3","schema","apiKey","defaultValue","message","validate","appVersion","autoNotify","beforeSend","endpoint","sessionEndpoint","autoCaptureSessions","notifyReleaseStages","releaseStage","maxBreadcrumbs","autoBreadcrumbs","user","mergeDefaults","opts","Error","errors","valid","_$inferReleaseStage_6","client","app","config","_$hasStack_5","err","stacktrace","root","factory","_$stackframe_33","StackFrame","_isNumber","isNaN","parseFloat","isFinite","_capitalize","str","charAt","toUpperCase","substring","_getter","p","props","booleanProps","numericProps","stringProps","arrayProps","getArgs","args","setArgs","v","TypeError","getEvalOrigin","evalOrigin","setEvalOrigin","getFunctionName","getFileName","getLineNumber","getColumnNumber","Boolean","j","Number","String","_$errorStackParser_29","ErrorStackParser","FIREFOX_SAFARI_STACK_REGEXP","CHROME_IE_STACK_REGEXP","SAFARI_NATIVE_CODE_REGEXP","parse","error","parseOpera","match","parseV8OrIE","parseFFOrSafari","extractLocation","urlLike","exec","replace","line","tokens","locationParts","functionName","fileName","lineNumber","columnNumber","source","parseOpera9","parseOpera11","parseOpera10","lineRE","lines","argsRaw","functionCall","shift","_$stackGenerator_32","StackGenerator","backtrace","maxStackSize","curr","callee","test","RegExp","$1","caller","__reduce_9","__filter_9","BugsnagReport","errorClass","errorMessage","handledState","defaultHandledState","___classCallCheck_9","__isBugsnagReport","_ignored","_handledState","breadcrumbs","context","device","stringOrFallback","groupingHash","request","severity","frame","formatStackframe","session","ignore","isIgnored","updateMetaData","section","_updates","updates","removeMetaData","_extends","property","payloadVersion","exceptions","unhandled","severityReason","file","method","normaliseFunctionName","code","inProject","fallback","getStacktrace","errorFramesToSkip","generatedFramesToSkip","ensureReport","reportOrError","_$BugsnagReport_9","c","discreteValues","Math","pow","pad","num","size","s","substr","randomBlock","random","safeCounter","api","counter","getTime","fingerprint","slug","date","print","globalCount","cache","navigator","mimeTypes","userAgent","register","_$browserCuid_28","applitude","__isoDate_10","Session","___classCallCheck_10","startedAt","_handled","_unhandled","events","handled","trackError","report","_$Session_10","_$isError_31","__map_2","__reduce_2","__includes_2","__isArray_2","noop","BugsnagClient","notifier","configSchema","___classCallCheck_2","version","url","_configured","_transport","sendSession","sendReport","_logger","debug","info","warn","plugins","beforeSession","BugsnagSession","configure","___extends_2","validity","use","plugin","init","transport","t","logger","l","sid","sessionDelegate","_sessionDelegate","startSession","leaveBreadcrumb","crumb","notify","_normaliseError","normaliseError","_opts","originalSeverity","notifyArgs","hasNecessaryFields","_$BugsnagClient_2","_$throttle_8","maxEvents","refresh","_$config_11","location","host","collectUserIp","__map_13","__reduce_13","_$consoleBreadcrumbs_13","CONSOLE_LOG_METHODS","original","console","_len","_key","arg","stringified","apply","_restore","destroy","forEach","consoleBreadcrumbsEnabled","__filter_13","_$context_14","unshift","pathname","__isoDate_15","_$device_15","___extends_15","time","locale","browserLanguage","systemLanguage","userLanguage","language","__reduce_16","scriptStartRe","scriptEndRe","extractScriptContent","_$inlineScriptContent_16","html","DOMContentLoaded","getHtml","documentElement","outerHTML","originalLocation","href","onreadystatechange","readyState","htmlLines","_extractScriptContent","script","start","abs","content","startLine","end","_$interactionBreadcrumbs_17","addEventListener","event","targetText","targetSelector","getNodeText","target","interactionBreadcrumbsEnabled","text","textContent","innerText","_$ip_18","___extends_18","clientIp","_$navigationBreadcrumbs_19","drop","oldURL","from","relativeLocation","to","newURL","state","history","replaceState","wrapHistoryFn","pushState","navigationBreadcrumbsEnabled","a","createElement","search","hash","stateChangeToMetaData","title","currentPath","prevState","orig","_$request_20","___extends_20","__map_21","__isArray_21","__includes_21","_$sessions_21","sessionClient","___extends_21","sessions","__map_22","strip","_$stripQueryString_22","___extends_22","_strip","__reduce_23","_listener","_$unhandledRejection_23","listener","reason","isBluebird","detail","fixBluebirdStacktrace","serializableReason","onunhandledrejection","promise","removeEventListener","_ref","_$windowOnerror_24","prevOnError","onerror","messageOrEvent","lineNo","charNo","decorateStack","culprit","setFileName","setLineNumber","setColumnNumber","errorCharacter","_$stringify_30","_$payload_25","payload","__isoDate_26","_$xDomainRequest_26","cb","encodeURIComponent","req","XDomainRequest","onload","responseText","open","setTimeout","send","__isoDate_27","_$xmlHttpRequest_27","XMLHttpRequest","DONE","setRequestHeader","__map_12","__reduce_12","___extends_12","transports","_$browser_12","userPlugins","sessionTrackingEnabled","finalSchema","getPrefixedConsole","inferBreadcrumbSetting","consoleLog","consoleMethod","bind","defaultInDev","Bugsnag","Client","Report","Breadcrumb"],"mappings":"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","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.bugsnag = f()}})(function(){var define,module,exports;\n","/*\n * Leaves breadcrumbs when the user interacts with the DOM\n */\nmodule.exports = {\n  init: (client) => {\n    if (!('addEventListener' in window)) return\n\n    window.addEventListener('click', (event) => {\n      let targetText, targetSelector\n      try {\n        targetText = getNodeText(event.target)\n        targetSelector = getNodeSelector(event.target)\n      } catch (e) {\n        targetText = '[hidden]'\n        targetSelector = '[hidden]'\n        client._logger.error('Cross domain error when tracking click event. See https://docs.bugsnag.com/platforms/browsers/faq/#3-cross-origin-script-errors')\n      }\n      client.leaveBreadcrumb('UI click', { targetText, targetSelector }, 'user')\n    }, true)\n  },\n  configSchema: {\n    interactionBreadcrumbsEnabled: {\n      defaultValue: () => undefined,\n      validate: (value) => value === true || value === false || value === undefined,\n      message: '(boolean) interactionBreadcrumbsEnabled should be true or false'\n    }\n  }\n}\n\n// extract text content from a element\nconst getNodeText = el => {\n  let text = el.textContent || el.innerText || ''\n  if (!text && (el.type === 'submit' || el.type === 'button')) text = el.value\n  text = text.replace(/^\\s+|\\s+$/g, '') // trim whitespace\n  return truncate(text, 140)\n}\n\n// Create a label from tagname, id and css class of the element\nfunction getNodeSelector (el) {\n  const parts = [ el.tagName ]\n  if (el.id) parts.push('#' + el.id)\n  if (el.className && el.className.length) parts.push(`.${el.className.split(' ').join('.')}`)\n  // Can't get much more advanced with the current browser\n  if (!document.querySelectorAll || !Array.prototype.indexOf) return parts.join('')\n  try {\n    if (document.querySelectorAll(parts.join('')).length === 1) return parts.join('')\n  } catch (e) {\n    // Sometimes the query selector can be invalid just return it as-is\n    return parts.join('')\n  }\n  // try to get a more specific selector if this one matches more than one element\n  if (el.parentNode.childNodes.length > 1) {\n    const index = Array.prototype.indexOf.call(el.parentNode.childNodes, el) + 1\n    parts.push(`:nth-child(${index})`)\n  }\n  if (document.querySelectorAll(parts.join('')).length === 1) return parts.join('')\n  // try prepending the parent node selector\n  if (el.parentNode) return `${getNodeSelector(el.parentNode)} > ${parts.join('')}`\n  return parts.join('')\n}\n\nfunction truncate (value, length) {\n  const ommision = '(...)'\n  if (value && value.length <= length) return value\n  return value.slice(0, length - ommision.length) + ommision\n}\n","module.exports = stringify\nstringify.default = stringify\nfunction stringify (obj) {\n  decirc(obj, '', [], null)\n  return JSON.stringify(obj)\n}\nfunction Circle (val, k, parent) {\n  this.val = val\n  this.k = k\n  this.parent = parent\n  this.count = 1\n}\nCircle.prototype.toJSON = function toJSON () {\n  if (--this.count === 0) {\n    this.parent[this.k] = this.val\n  }\n  return '[Circular]'\n}\nfunction decirc (val, k, stack, parent) {\n  if (typeof val === 'object' && val !== null) {\n    if (typeof val.toJSON === 'function') {\n      if (val instanceof Circle) {\n        val.count++\n        return\n      }\n      if (val.toJSON.forceDecirc === undefined) {\n        return\n      }\n    }\n    for (var i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        parent[k] = new Circle(val, k, parent)\n        return\n      }\n    }\n    stack.push(val)\n    for (var key in val) {\n      if (Object.prototype.hasOwnProperty.call(val, key)) {\n        decirc(val[key], key, stack, val)\n      }\n    }\n    stack.pop()\n  }\n}\n","// minimal implementations of useful ES functionality\n\n// all we really need for arrays is reduce – everything else is just sugar!\n\n// Array#reduce\nconst reduce = (arr, fn, accum) => {\n  let val = accum\n  for (let i = 0, len = arr.length; i < len; i++) val = fn(val, arr[i], i, arr)\n  return val\n}\n\n// Array#filter\nconst filter = (arr, fn) =>\n  reduce(arr, (accum, item, i, arr) => !fn(item, i, arr) ? accum : accum.concat(item), [])\n\n// Array#map\nconst map = (arr, fn) =>\n  reduce(arr, (accum, item, i, arr) => accum.concat(fn(item, i, arr)), [])\n\n// Array#includes\nconst includes = (arr, x) =>\n  reduce(arr, (accum, item, i, arr) => accum === true || item === x, false)\n\nconst _hasDontEnumBug = !({ toString: null }).propertyIsEnumerable('toString')\nconst _dontEnums = [\n  'toString', 'toLocaleString', 'valueOf', 'hasOwnProperty',\n  'isPrototypeOf', 'propertyIsEnumerable', 'constructor'\n]\n\n// Object#keys\nconst keys = obj => {\n  // stripped down version of\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/Keys\n  const result = []\n  let prop\n  for (prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) result.push(prop)\n  }\n  if (!_hasDontEnumBug) return result\n  for (let i = 0, len = _dontEnums.length; i < len; i++) {\n    if (Object.prototype.hasOwnProperty.call(obj, _dontEnums[i])) result.push(_dontEnums[i])\n  }\n  return result\n}\n\n// Array#isArray\nconst isArray = obj => Object.prototype.toString.call(obj) === '[object Array]'\n\nconst _pad = n => n < 10 ? `0${n}` : n\n\n// Date#toISOString\nconst isoDate = () => {\n  // from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString\n  const d = new Date()\n  return d.getUTCFullYear() +\n    '-' + _pad(d.getUTCMonth() + 1) +\n    '-' + _pad(d.getUTCDate()) +\n    'T' + _pad(d.getUTCHours()) +\n    ':' + _pad(d.getUTCMinutes()) +\n    ':' + _pad(d.getUTCSeconds()) +\n    '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) +\n    'Z'\n}\n\nmodule.exports = { map, reduce, filter, includes, keys, isArray, isoDate }\n","const { isoDate } = require('./lib/es-utils')\n\nclass BugsnagBreadcrumb {\n  constructor (name = '[anonymous]', metaData = {}, type = 'manual', timestamp = isoDate()) {\n    this.type = type\n    this.name = name\n    this.metaData = metaData\n    this.timestamp = timestamp\n  }\n\n  toJSON () {\n    return {\n      type: this.type,\n      name: this.name,\n      timestamp: this.timestamp,\n      metaData: this.metaData\n    }\n  }\n}\n\n// force `fast-safe-stringify` to do its thing\n// https://github.com/davidmarkclements/fast-safe-stringify#tojson-support\nBugsnagBreadcrumb.prototype.toJSON.forceDecirc = true\n\nmodule.exports = BugsnagBreadcrumb\n","const { includes } = require('./es-utils')\n\nmodule.exports = value =>\n  includes([ 'undefined', 'number' ], typeof value) &&\n  parseInt('' + value, 10) === value &&\n  value > 0\n","const { filter, reduce, keys, isArray } = require('./lib/es-utils')\nconst positiveIntIfDefined = require('./lib/positive-int-check')\n\nmodule.exports.schema = {\n  apiKey: {\n    defaultValue: () => null,\n    message: '(string) apiKey is required',\n    validate: value => typeof value === 'string' && value.length\n  },\n  appVersion: {\n    defaultValue: () => null,\n    message: '(string) appVersion should have a value if supplied',\n    validate: value => value === null || (typeof value === 'string' && value.length)\n  },\n  autoNotify: {\n    defaultValue: () => true,\n    message: '(boolean) autoNotify should be true or false',\n    validate: value => value === true || value === false\n  },\n  beforeSend: {\n    defaultValue: () => [],\n    message: '(array[Function]) beforeSend should only contain functions',\n    validate: value => typeof value === 'function' || (isArray(value) && filter(value, f => typeof f === 'function').length === value.length)\n  },\n  endpoint: {\n    defaultValue: () => '//notify.bugsnag.com',\n    message: '(string) endpoint should be set',\n    validate: () => true\n  },\n  sessionEndpoint: {\n    defaultValue: () => '//sessions.bugsnag.com',\n    message: '(string) sessionEndpoint should be set',\n    validate: () => true\n  },\n  autoCaptureSessions: {\n    defaultValue: () => false,\n    message: '(boolean) autoCaptureSessions should be true/false',\n    validate: val => val === true || val === false\n  },\n  notifyReleaseStages: {\n    defaultValue: () => null,\n    message: '(array[string]) notifyReleaseStages should only contain strings',\n    validate: value => value === null || (isArray(value) && filter(value, f => typeof f === 'string').length === value.length)\n  },\n  releaseStage: {\n    defaultValue: () => 'production',\n    message: '(string) releaseStage should be set',\n    validate: value => typeof value === 'string' && value.length\n  },\n  maxBreadcrumbs: {\n    defaultValue: () => 20,\n    message: '(number) maxBreadcrumbs must be a number (≤40) if specified',\n    validate: value => value === 0 || (positiveIntIfDefined(value) && (value === undefined || value <= 40))\n  },\n  autoBreadcrumbs: {\n    defaultValue: () => true,\n    message: '(boolean) autoBreadcrumbs should be true or false',\n    validate: (value) => typeof value === 'boolean'\n  },\n  user: {\n    defaultValue: () => null,\n    message: '(object) user should be an object',\n    validate: (value) => typeof value === 'object'\n  },\n  metaData: {\n    defaultValue: () => null,\n    message: '(object) metaData should be an object',\n    validate: (value) => typeof value === 'object'\n  }\n}\n\nmodule.exports.mergeDefaults = (opts, schema) => {\n  if (!opts || !schema) throw new Error('schema.mergeDefaults(opts, schema): opts and schema objects are required')\n  return reduce(keys(schema), (accum, key) => {\n    accum[key] = opts[key] !== undefined ? opts[key] : schema[key].defaultValue()\n    return accum\n  }, {})\n}\n\nmodule.exports.validate = (opts, schema) => {\n  if (!opts || !schema) throw new Error('schema.mergeDefaults(opts, schema): opts and schema objects are required')\n  const errors = reduce(keys(schema), (accum, key) => {\n    if (schema[key].validate(opts[key])) return accum\n    return accum.concat({ key, message: schema[key].message, value: opts[key] })\n  }, [])\n  return { valid: !errors.length, errors }\n}\n","module.exports = client =>\n  client.app && typeof client.app.releaseStage === 'string'\n    ? client.app.releaseStage\n    : client.config.releaseStage\n","// Given `err` which may be an error, does it have a stack property which is a string?\nmodule.exports = err =>\n  !!err &&\n  (!!err.stack || !!err.stacktrace || !!err['opera#sourceloc']) &&\n  typeof (err.stack || err.stacktrace || err['opera#sourceloc']) === 'string'\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function() {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function _capitalize(str) {\n        return str.charAt(0).toUpperCase() + str.substring(1);\n    }\n\n    function _getter(p) {\n        return function() {\n            return this[p];\n        };\n    }\n\n    var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];\n    var numericProps = ['columnNumber', 'lineNumber'];\n    var stringProps = ['fileName', 'functionName', 'source'];\n    var arrayProps = ['args'];\n\n    var props = booleanProps.concat(numericProps, stringProps, arrayProps);\n\n    function StackFrame(obj) {\n        if (obj instanceof Object) {\n            for (var i = 0; i < props.length; i++) {\n                if (obj.hasOwnProperty(props[i]) && obj[props[i]] !== undefined) {\n                    this['set' + _capitalize(props[i])](obj[props[i]]);\n                }\n            }\n        }\n    }\n\n    StackFrame.prototype = {\n        getArgs: function() {\n            return this.args;\n        },\n        setArgs: function(v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        getEvalOrigin: function() {\n            return this.evalOrigin;\n        },\n        setEvalOrigin: function(v) {\n            if (v instanceof StackFrame) {\n                this.evalOrigin = v;\n            } else if (v instanceof Object) {\n                this.evalOrigin = new StackFrame(v);\n            } else {\n                throw new TypeError('Eval Origin must be an Object or StackFrame');\n            }\n        },\n\n        toString: function() {\n            var functionName = this.getFunctionName() || '{anonymous}';\n            var args = '(' + (this.getArgs() || []).join(',') + ')';\n            var fileName = this.getFileName() ? ('@' + this.getFileName()) : '';\n            var lineNumber = _isNumber(this.getLineNumber()) ? (':' + this.getLineNumber()) : '';\n            var columnNumber = _isNumber(this.getColumnNumber()) ? (':' + this.getColumnNumber()) : '';\n            return functionName + args + fileName + lineNumber + columnNumber;\n        }\n    };\n\n    for (var i = 0; i < booleanProps.length; i++) {\n        StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);\n        StackFrame.prototype['set' + _capitalize(booleanProps[i])] = (function(p) {\n            return function(v) {\n                this[p] = Boolean(v);\n            };\n        })(booleanProps[i]);\n    }\n\n    for (var j = 0; j < numericProps.length; j++) {\n        StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);\n        StackFrame.prototype['set' + _capitalize(numericProps[j])] = (function(p) {\n            return function(v) {\n                if (!_isNumber(v)) {\n                    throw new TypeError(p + ' must be a Number');\n                }\n                this[p] = Number(v);\n            };\n        })(numericProps[j]);\n    }\n\n    for (var k = 0; k < stringProps.length; k++) {\n        StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);\n        StackFrame.prototype['set' + _capitalize(stringProps[k])] = (function(p) {\n            return function(v) {\n                this[p] = String(v);\n            };\n        })(stringProps[k]);\n    }\n\n    return StackFrame;\n}));\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('error-stack-parser', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.ErrorStackParser = factory(root.StackFrame);\n    }\n}(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+\\:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+\\:\\d+|\\(native\\))/m;\n    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code\\])?$/;\n\n    return {\n        /**\n         * Given an Error object, extract the most information from it.\n         *\n         * @param {Error} error object\n         * @return {Array} of StackFrames\n         */\n        parse: function ErrorStackParser$$parse(error) {\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n                return this.parseOpera(error);\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                return this.parseV8OrIE(error);\n            } else if (error.stack) {\n                return this.parseFFOrSafari(error);\n            } else {\n                throw new Error('Cannot parse given Error object');\n            }\n        },\n\n        // Separate line and column numbers from a string of the form: (URI:Line:Column)\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n            // Fail-fast but return locations like \"(native)\"\n            if (urlLike.indexOf(':') === -1) {\n                return [urlLike];\n            }\n\n            var regExp = /(.+?)(?:\\:(\\d+))?(?:\\:(\\d+))?$/;\n            var parts = regExp.exec(urlLike.replace(/[\\(\\)]/g, ''));\n            return [parts[1], parts[2] || undefined, parts[3] || undefined];\n        },\n\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(CHROME_IE_STACK_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                if (line.indexOf('(eval ') > -1) {\n                    // Throw away eval information until we implement stacktrace.js/stackframe#8\n                    line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^\\()]*)|(\\)\\,.*$)/g, '');\n                }\n                var tokens = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(').split(/\\s+/).slice(1);\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionName = tokens.join(' ') || undefined;\n                var fileName = ['eval', '<anonymous>'].indexOf(locationParts[0]) > -1 ? undefined : locationParts[0];\n\n                return new StackFrame({\n                    functionName: functionName,\n                    fileName: fileName,\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        },\n\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                // Throw away eval information until we implement stacktrace.js/stackframe#8\n                if (line.indexOf(' > eval') > -1) {\n                    line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval\\:\\d+\\:\\d+/g, ':$1');\n                }\n\n                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n                    // Safari eval frames only have function names and nothing else\n                    return new StackFrame({\n                        functionName: line\n                    });\n                } else {\n                    var tokens = line.split('@');\n                    var locationParts = this.extractLocation(tokens.pop());\n                    var functionName = tokens.join('@') || undefined;\n\n                    return new StackFrame({\n                        functionName: functionName,\n                        fileName: locationParts[0],\n                        lineNumber: locationParts[1],\n                        columnNumber: locationParts[2],\n                        source: line\n                    });\n                }\n            }, this);\n        },\n\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n                return this.parseOpera9(e);\n            } else if (!e.stack) {\n                return this.parseOpera10(e);\n            } else {\n                return this.parseOpera11(e);\n            }\n        },\n\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n            var lines = e.message.split('\\n');\n            var result = [];\n\n            for (var i = 2, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame({\n                        fileName: match[2],\n                        lineNumber: match[1],\n                        source: lines[i]\n                    }));\n                }\n            }\n\n            return result;\n        },\n\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n            var lines = e.stacktrace.split('\\n');\n            var result = [];\n\n            for (var i = 0, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(\n                        new StackFrame({\n                            functionName: match[3] || undefined,\n                            fileName: match[2],\n                            lineNumber: match[1],\n                            source: lines[i]\n                        })\n                    );\n                }\n            }\n\n            return result;\n        },\n\n        // Opera 10.65+ Error.stack very similar to FF/Safari\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);\n            }, this);\n\n            return filtered.map(function(line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionCall = (tokens.shift() || '');\n                var functionName = functionCall\n                        .replace(/<anonymous function(: (\\w+))?>/, '$2')\n                        .replace(/\\([^\\)]*\\)/g, '') || undefined;\n                var argsRaw;\n                if (functionCall.match(/\\(([^\\)]*)\\)/)) {\n                    argsRaw = functionCall.replace(/^[^\\(]+\\(([^\\)]*)\\)$/, '$1');\n                }\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ?\n                    undefined : argsRaw.split(',');\n\n                return new StackFrame({\n                    functionName: functionName,\n                    args: args,\n                    fileName: locationParts[0],\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        }\n    };\n}));\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stack-generator', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.StackGenerator = factory(root.StackFrame);\n    }\n}(this, function(StackFrame) {\n    return {\n        backtrace: function StackGenerator$$backtrace(opts) {\n            var stack = [];\n            var maxStackSize = 10;\n\n            if (typeof opts === 'object' && typeof opts.maxStackSize === 'number') {\n                maxStackSize = opts.maxStackSize;\n            }\n\n            var curr = arguments.callee;\n            while (curr && stack.length < maxStackSize) {\n                if (!curr['arguments']) {\n                  break;\n                }\n                // Allow V8 optimizations\n                var args = new Array(curr['arguments'].length);\n                for (var i = 0; i < args.length; ++i) {\n                    args[i] = curr['arguments'][i];\n                }\n                if (/function(?:\\s+([\\w$]+))+\\s*\\(/.test(curr.toString())) {\n                    stack.push(new StackFrame({functionName: RegExp.$1 || undefined, args: args}));\n                } else {\n                    stack.push(new StackFrame({args: args}));\n                }\n\n                try {\n                    curr = curr.caller;\n                } catch (e) {\n                    break;\n                }\n            }\n            return stack;\n        }\n    };\n}));\n","const ErrorStackParser = require('error-stack-parser')\nconst StackGenerator = require('stack-generator')\nconst hasStack = require('./lib/has-stack')\nconst { reduce, filter } = require('./lib/es-utils')\n\nclass BugsnagReport {\n  constructor (errorClass, errorMessage, stacktrace = [], handledState = defaultHandledState()) {\n    // duck-typing ftw >_<\n    this.__isBugsnagReport = true\n\n    this._ignored = false\n\n    // private (un)handled state\n    this._handledState = handledState\n\n    // setable props\n    this.app = undefined\n    this.apiKey = undefined\n    this.breadcrumbs = []\n    this.context = undefined\n    this.device = undefined\n    this.errorClass = stringOrFallback(errorClass, '[no error class]')\n    this.errorMessage = stringOrFallback(errorMessage, '[no error message]')\n    this.groupingHash = undefined\n    this.metaData = {}\n    this.request = undefined\n    this.severity = this._handledState.severity\n    this.stacktrace = reduce(stacktrace, (accum, frame) => {\n      const f = formatStackframe(frame)\n      // don't include a stackframe if none of its properties are defined\n      try {\n        if (JSON.stringify(f) === '{}') return accum\n        return accum.concat(f)\n      } catch (e) {\n        return accum\n      }\n    }, [])\n    this.user = undefined\n    this.session = undefined\n  }\n\n  ignore () {\n    this._ignored = true\n  }\n\n  isIgnored () {\n    return this._ignored\n  }\n\n  updateMetaData (section, ...args) {\n    if (!section) return this\n    let updates\n\n    // updateMetaData(\"section\", null) -> removes section\n    if (args[0] === null) return this.removeMetaData(section)\n\n    // updateMetaData(\"section\", \"property\", null) -> removes property from section\n    if (args[1] === null) return this.removeMetaData(section, args[0], args[1])\n\n    // normalise the two supported input types into object form\n    if (typeof args[0] === 'object') updates = args[0]\n    if (typeof args[0] === 'string') updates = { [args[0]]: args[1] }\n\n    // exit if we don't have an updates object at this point\n    if (!updates) return this\n\n    // ensure a section with this name exists\n    if (!this.metaData[section]) this.metaData[section] = {}\n\n    // merge the updates with the existing section\n    this.metaData[section] = { ...this.metaData[section], ...updates }\n\n    return this\n  }\n\n  removeMetaData (section, property) {\n    if (typeof section !== 'string') return this\n\n    // remove an entire section\n    if (!property) {\n      delete this.metaData[section]\n      return this\n    }\n\n    // remove a single property from a section\n    if (this.metaData[section]) {\n      delete this.metaData[section][property]\n      return this\n    }\n\n    return this\n  }\n\n  toJSON () {\n    return {\n      payloadVersion: '4',\n      exceptions: [\n        {\n          errorClass: this.errorClass,\n          message: this.errorMessage,\n          stacktrace: this.stacktrace,\n          type: 'browserjs'\n        }\n      ],\n      severity: this.severity,\n      unhandled: this._handledState.unhandled,\n      severityReason: this._handledState.severityReason,\n      app: this.app,\n      device: this.device,\n      breadcrumbs: this.breadcrumbs,\n      context: this.context,\n      user: this.user,\n      metaData: this.metaData,\n      groupingHash: this.groupingHash,\n      request: this.request,\n      session: this.session\n    }\n  }\n}\n\n// force `fast-safe-stringify` to do its thing\n// https://github.com/davidmarkclements/fast-safe-stringify#tojson-support\nBugsnagReport.prototype.toJSON.forceDecirc = true\n\n// takes a stacktrace.js style stackframe (https://github.com/stacktracejs/stackframe)\n// and returns a Bugsnag compatible stackframe (https://docs.bugsnag.com/api/error-reporting/#json-payload)\nconst formatStackframe = frame => {\n  const f = {\n    file: frame.fileName,\n    method: normaliseFunctionName(frame.functionName),\n    lineNumber: frame.lineNumber,\n    columnNumber: frame.columnNumber,\n    code: undefined,\n    inProject: undefined\n  }\n  // Some instances result in no file:\n  // - calling notify() from chrome's terminal results in no file/method.\n  // - non-error exception thrown from global code in FF\n  // This adds one.\n  if (f.lineNumber > -1 && !f.file && !f.method) {\n    f.file = 'global code'\n  }\n  return f\n}\n\nconst normaliseFunctionName = name => /^global code$/i.test(name) ? 'global code' : name\n\nconst defaultHandledState = () => ({\n  unhandled: false,\n  severity: 'warning',\n  severityReason: { type: 'handledException' }\n})\n\nconst stringOrFallback = (str, fallback) => typeof str === 'string' && str ? str : fallback\n\n// Helpers\n\nBugsnagReport.getStacktrace = (error, errorFramesToSkip = 0, generatedFramesToSkip = 0) => {\n  if (hasStack(error)) return ErrorStackParser.parse(error).slice(errorFramesToSkip)\n  // error wasn't provided or didn't have a stacktrace so try to walk the callstack\n  return filter(StackGenerator.backtrace(), frame =>\n    (frame.functionName || '').indexOf('StackGenerator$$') === -1\n  ).slice(1 + generatedFramesToSkip)\n}\n\nBugsnagReport.ensureReport = function (reportOrError, errorFramesToSkip = 0, generatedFramesToSkip = 0) {\n  // notify() can be called with a Report object. In this case no action is required\n  if (reportOrError.__isBugsnagReport) return reportOrError\n  try {\n    const stacktrace = BugsnagReport.getStacktrace(reportOrError, errorFramesToSkip, 1 + generatedFramesToSkip)\n    return new BugsnagReport(reportOrError.name, reportOrError.message, stacktrace)\n  } catch (e) {\n    return new BugsnagReport(reportOrError.name, reportOrError.message, [])\n  }\n}\n\nmodule.exports = BugsnagReport\n","/**\n * cuid.js\n * Collision-resistant UID generator for browsers and node.\n * Sequential for fast db lookups and recency sorting.\n * Safe for element IDs and server-side lookups.\n *\n * Extracted from CLCTR\n *\n * Copyright (c) Eric Elliott 2012\n * MIT License\n */\n\n/*global window, navigator, document, require, process, module */\n(function (app) {\n  'use strict';\n  var namespace = 'cuid',\n    c = 0,\n    blockSize = 4,\n    base = 36,\n    discreteValues = Math.pow(base, blockSize),\n\n    pad = function pad(num, size) {\n      var s = \"000000000\" + num;\n      return s.substr(s.length-size);\n    },\n\n    randomBlock = function randomBlock() {\n      return pad((Math.random() *\n            discreteValues << 0)\n            .toString(base), blockSize);\n    },\n\n    safeCounter = function () {\n      c = (c < discreteValues) ? c : 0;\n      c++; // this is not subliminal\n      return c - 1;\n    },\n\n    api = function cuid() {\n      // Starting with a lowercase letter makes\n      // it HTML element ID friendly.\n      var letter = 'c', // hard-coded allows for sequential access\n\n        // timestamp\n        // warning: this exposes the exact date and time\n        // that the uid was created.\n        timestamp = (new Date().getTime()).toString(base),\n\n        // Prevent same-machine collisions.\n        counter,\n\n        // A few chars to generate distinct ids for different\n        // clients (so different computers are far less\n        // likely to generate the same id)\n        fingerprint = api.fingerprint(),\n\n        // Grab some more chars from Math.random()\n        random = randomBlock() + randomBlock();\n\n        counter = pad(safeCounter().toString(base), blockSize);\n\n      return  (letter + timestamp + counter + fingerprint + random);\n    };\n\n  api.slug = function slug() {\n    var date = new Date().getTime().toString(36),\n      counter,\n      print = api.fingerprint().slice(0,1) +\n        api.fingerprint().slice(-1),\n      random = randomBlock().slice(-2);\n\n      counter = safeCounter().toString(36).slice(-4);\n\n    return date.slice(-2) +\n      counter + print + random;\n  };\n\n  api.globalCount = function globalCount() {\n    // We want to cache the results of this\n    var cache = (function calc() {\n        var i,\n          count = 0;\n\n        for (i in window) {\n          count++;\n        }\n\n        return count;\n      }());\n\n    api.globalCount = function () { return cache; };\n    return cache;\n  };\n\n  api.fingerprint = function browserPrint() {\n    return pad((navigator.mimeTypes.length +\n      navigator.userAgent.length).toString(36) +\n      api.globalCount().toString(36), 4);\n  };\n\n  // don't change anything from here down.\n  if (app.register) {\n    app.register(namespace, api);\n  } else if (typeof module !== 'undefined') {\n    module.exports = api;\n  } else {\n    app[namespace] = api;\n  }\n\n}(this.applitude || this));\n","const { isoDate } = require('./lib/es-utils')\nconst cuid = require('cuid')\n\nclass Session {\n  constructor () {\n    this.id = cuid()\n    this.startedAt = isoDate()\n    this._handled = 0\n    this._unhandled = 0\n  }\n  toJSON () {\n    return {\n      id: this.id,\n      startedAt: this.startedAt,\n      events: { handled: this._handled, unhandled: this._unhandled }\n    }\n  }\n  trackError (report) {\n    this[report._handledState.unhandled ? '_unhandled' : '_handled'] += 1\n  }\n}\n\n// force `fast-safe-stringify` to do its thing\n// https://github.com/davidmarkclements/fast-safe-stringify#tojson-support\nSession.prototype.toJSON.forceDecirc = true\n\nmodule.exports = Session\n","\n/**\n * Expose `isError`.\n */\n\nmodule.exports = isError;\n\n/**\n * Test whether `value` is error object.\n *\n * @param {*} value\n * @returns {boolean}\n */\n\nfunction isError(value) {\n  switch (Object.prototype.toString.call(value)) {\n    case '[object Error]': return true;\n    case '[object Exception]': return true;\n    case '[object DOMException]': return true;\n    default: return value instanceof Error;\n  }\n}\n","const config = require('./config')\nconst BugsnagReport = require('./report')\nconst BugsnagBreadcrumb = require('./breadcrumb')\nconst BugsnagSession = require('./session')\nconst { map, reduce, includes, isArray } = require('./lib/es-utils')\nconst inferReleaseStage = require('./lib/infer-release-stage')\nconst isError = require('iserror')\n\nconst noop = () => {}\n\nclass BugsnagClient {\n  constructor (notifier, configSchema = config.schema, session = null) {\n    if (!notifier) throw new Error('new BugsnagClient(notifier, configSchema) requires `notifier` argument')\n    if (!notifier.name || !notifier.version || !notifier.url) {\n      throw new Error('new BugsnagClient(notifier, configSchema) - `notifier` requires: `{ name, version, url }`')\n    }\n\n    // notifier id\n    this.notifier = notifier\n\n    // config\n    this.configSchema = configSchema\n\n    // configure() should be called before notify()\n    this._configured = false\n\n    // i/o\n    this._transport = { name: 'NULL_TRANSPORT', sendSession: noop, sendReport: noop }\n    this._logger = { debug: noop, info: noop, warn: noop, error: noop }\n\n    // plugins\n    this.plugins = []\n\n    this.session = session\n    this.beforeSession = []\n\n    this.breadcrumbs = []\n\n    // setable props\n    this.app = {}\n    this.context = undefined\n    this.device = undefined\n    this.metaData = undefined\n    this.request = undefined\n    this.user = {}\n\n    // expose internal constructors\n    this.BugsnagReport = BugsnagReport\n    this.BugsnagBreadcrumb = BugsnagBreadcrumb\n    this.BugsnagSession = BugsnagSession\n  }\n\n  configure (opts = {}) {\n    this.config = config.mergeDefaults({ ...this.config, ...opts }, this.configSchema)\n    const validity = config.validate(this.config, this.configSchema)\n    if (!validity.valid === true) {\n      const err = new Error('Bugsnag configuration error')\n      err.errors = map(validity.errors, (err) => `${err.key} ${err.message} \\n  ${err.value}`)\n      throw err\n    }\n    if (typeof this.config.beforeSend === 'function') this.config.beforeSend = [ this.config.beforeSend ]\n    if (this.config.appVersion !== null) this.app.version = this.config.appVersion\n    if (this.config.metaData) this.metaData = this.config.metaData\n    if (this.config.user) this.user = this.config.user\n    this._configured = true\n    this._logger.debug(`Loaded!`)\n    return this\n  }\n\n  use (plugin) {\n    this.plugins.push(plugin)\n    return plugin.init(this)\n  }\n\n  transport (t) {\n    this._transport = t\n    return this\n  }\n\n  logger (l, sid) {\n    this._logger = l\n    return this\n  }\n\n  sessionDelegate (s) {\n    this._sessionDelegate = s\n    return this\n  }\n\n  startSession () {\n    if (!this._sessionDelegate) {\n      this._logger.warn('No session implementation is installed')\n      return this\n    }\n    return this._sessionDelegate.startSession(this)\n  }\n\n  leaveBreadcrumb (name, metaData, type, timestamp) {\n    if (!this._configured) throw new Error('Bugsnag must be configured before calling leaveBreadcrumb()')\n\n    // coerce bad values so that the defaults get set\n    name = name || undefined\n    type = typeof type === 'string' ? type : undefined\n    timestamp = typeof timestamp === 'string' ? timestamp : undefined\n    metaData = typeof metaData === 'object' && metaData !== null ? metaData : undefined\n\n    // if no name and no metaData, usefulness of this crumb is questionable at best so discard\n    if (typeof name !== 'string' && !metaData) return\n\n    const crumb = new BugsnagBreadcrumb(name, metaData, type, timestamp)\n\n    // push the valid crumb onto the queue and maintain the length\n    this.breadcrumbs.push(crumb)\n    if (this.breadcrumbs.length > this.config.maxBreadcrumbs) {\n      this.breadcrumbs = this.breadcrumbs.slice(this.breadcrumbs.length - this.config.maxBreadcrumbs)\n    }\n\n    return this\n  }\n\n  notify (error, opts = {}) {\n    if (!this._configured) throw new Error('Bugsnag must be configured before calling report()')\n\n    // releaseStage can be set via config.releaseStage or client.app.releaseStage\n    const releaseStage = inferReleaseStage(this)\n\n    // ensure we have an error (or a reasonable object representation of an error)\n    let { err, errorFramesToSkip, _opts } = normaliseError(error, opts, this._logger)\n    if (_opts) opts = _opts\n\n    // if we have something falsey at this point, report usage error\n    if (!err) {\n      this._logger.warn(`Usage error. notify() called with no \"error\" parameter`)\n      err = new Error('Bugsnag usage error. notify() called with no \"error\" parameter')\n    }\n\n    // ensure opts is an object\n    if (typeof opts !== 'object' || opts === null) opts = {}\n\n    // create a report from the error, if it isn't one already\n    const report = BugsnagReport.ensureReport(err, errorFramesToSkip, 1)\n\n    report.app = { ...{ releaseStage }, ...report.app, ...this.app }\n    report.context = report.context || opts.context || this.context || undefined\n    report.device = { ...report.device, ...this.device, ...opts.device }\n    report.request = { ...report.request, ...this.request, ...opts.request }\n    report.user = { ...report.user, ...this.user, ...opts.user }\n    report.metaData = { ...report.metaData, ...this.metaData, ...opts.metaData }\n    report.breadcrumbs = this.breadcrumbs.slice(0)\n\n    if (this.session) {\n      this.session.trackError(report)\n      report.session = this.session\n    }\n\n    // set severity if supplied\n    if (opts.severity !== undefined) {\n      report.severity = opts.severity\n      report._handledState.severityReason = { type: 'userSpecifiedSeverity' }\n    }\n\n    // exit early if the reports should not be sent on the current releaseStage\n    if (isArray(this.config.notifyReleaseStages) && !includes(this.config.notifyReleaseStages, releaseStage)) {\n      this._logger.warn(`Report not sent due to releaseStage/notifyReleaseStages configuration`)\n      return false\n    }\n\n    const originalSeverity = report.severity\n\n    const beforeSend = [].concat(opts.beforeSend).concat(this.config.beforeSend)\n    const preventSend = reduce(beforeSend, (accum, fn) => {\n      if (accum === true) return true\n      if (typeof fn === 'function' && fn(report) === false) return true\n      if (report.isIgnored()) return true\n      return false\n    }, false)\n\n    if (preventSend) {\n      this._logger.debug(`Report not sent due to beforeSend callback`)\n      return false\n    }\n\n    // only leave a crumb for the error if actually got sent\n    if (this.config.autoBreadcrumbs) {\n      this.leaveBreadcrumb(report.errorClass, {\n        errorClass: report.errorClass,\n        errorMessage: report.errorMessage,\n        severity: report.severity,\n        stacktrace: report.stacktrace\n      }, 'error')\n    }\n\n    if (originalSeverity !== report.severity) {\n      report._handledState.severityReason = { type: 'userCallbackSetSeverity' }\n    }\n\n    this._transport.sendReport(this._logger, this.config, {\n      apiKey: report.apiKey || this.config.apiKey,\n      notifier: this.notifier,\n      events: [ report ]\n    })\n\n    return true\n  }\n}\n\nconst normaliseError = (error, opts, logger) => {\n  let err\n  let errorFramesToSkip = 0\n  let _opts\n  switch (typeof error) {\n    case 'string':\n      if (typeof opts === 'string') {\n        // ≤v3 used to have a notify('ErrorName', 'Error message') interface\n        // report usage/deprecation errors if this function is called like that\n        logger.warn(`Usage error. notify() called with (string, string) but expected (error, object)`)\n        err = new Error('Bugsnag usage error. notify() called with (string, string) but expected (error, object)')\n        _opts = { metaData: { notifier: { notifyArgs: [ error, opts ] } } }\n      } else {\n        err = new Error(String(error))\n        errorFramesToSkip += 2\n      }\n      break\n    case 'number':\n    case 'boolean':\n      err = new Error(String(error))\n      break\n    case 'function':\n      logger.warn(`Usage error. notify() called with a function as \"error\" parameter`)\n      err = new Error('Bugsnag usage error. notify() called with a function as \"error\" parameter')\n      break\n    case 'object':\n      if (error !== null && (isError(error) || error.__isBugsnagReport)) {\n        err = error\n      } else if (error !== null && hasNecessaryFields(error)) {\n        err = new Error(error.message || error.errorMessage)\n        err.name = error.name || error.errorClass\n        errorFramesToSkip += 2\n      } else {\n        logger.warn(`Usage error. notify() called with an unsupported object as \"error\" parameter. Supply an Error or { name, message } object.`)\n        err = new Error('Bugsnag usage error. notify() called with an unsupported object as \"error\" parameter. Supply an Error or { name, message } object.')\n      }\n      break\n  }\n  return { err, errorFramesToSkip, _opts }\n}\n\nconst hasNecessaryFields = error =>\n  (typeof error.name === 'string' || typeof error.errorClass === 'string') &&\n  (typeof error.message === 'string' || typeof error.errorMessage === 'string')\n\nmodule.exports = BugsnagClient\n","const positiveIntIfDefined = require('../lib/positive-int-check')\n\n/*\n * Throttles and dedupes error reports\n */\n\nmodule.exports = {\n  init: (client) => {\n    // track sent events for each init of the plugin\n    let n = 0\n\n    // add beforeSend hook\n    client.config.beforeSend.push((report) => {\n      // have max events been sent already?\n      if (n >= client.config.maxEvents) return report.ignore()\n      n++\n    })\n\n    client.refresh = () => { n = 0 }\n  },\n  configSchema: {\n    maxEvents: {\n      defaultValue: () => 10,\n      message: '(number) maxEvents must be a positive integer ≤100',\n      validate: val => positiveIntIfDefined(val) && val < 100\n    }\n  }\n}\n","module.exports = {\n  releaseStage: {\n    defaultValue: () => {\n      if (/^localhost(:\\d+)?$/.test(window.location.host)) return 'development'\n      return 'production'\n    },\n    message: '(string) releaseStage should be set',\n    validate: value => typeof value === 'string' && value.length\n  },\n  collectUserIp: {\n    defaultValue: () => true,\n    message: '(boolean) collectUserIp should true/false',\n    validate: value => value === true || value === false\n  }\n}\n","const { map, reduce, filter } = require('../../base/lib/es-utils')\n\n/*\n * Leaves breadcrumbs when console log methods are called\n */\nmodule.exports = {\n  init: (client) => {\n    map(CONSOLE_LOG_METHODS, method => {\n      const original = console[method]\n      console[method] = (...args) => {\n        client.leaveBreadcrumb('Console output', reduce(args, (accum, arg, i) => {\n          // do the best/simplest stringification of each argument\n          let stringified = String(arg)\n          // if it stringifies to [object Object] attempt to JSON stringify\n          if (stringified === '[object Object]') {\n            // catch stringify errors and fallback to [object Object]\n            try { stringified = JSON.stringify(arg) } catch (e) {}\n          }\n          accum[`[${i}]`] = stringified\n          return accum\n        }, {\n          severity: method.indexOf('group') === 0 ? 'log' : method\n        }), 'log')\n        original.apply(console, args)\n      }\n      console[method]._restore = () => { console[method] = original }\n    })\n  },\n  destroy: () => CONSOLE_LOG_METHODS.forEach(method => {\n    if (typeof console[method]._restore === 'function') console[method]._restore()\n  }),\n  configSchema: {\n    consoleBreadcrumbsEnabled: {\n      defaultValue: () => undefined,\n      validate: (value) => value === true || value === false || value === undefined,\n      message: '(boolean) consoleBreadcrumbsEnabled should be true or false'\n    }\n  }\n}\n\nconst CONSOLE_LOG_METHODS = filter([ 'log', 'debug', 'info', 'warn', 'error' ], method =>\n  typeof console !== 'undefined' && typeof console[method] === 'function'\n)\n","/*\n * Sets the default context to be the current URL\n */\nmodule.exports = {\n  init: (client) => {\n    client.config.beforeSend.unshift(report => {\n      if (report.context) return\n      report.context = window.location.pathname\n    })\n  }\n}\n","const { isoDate } = require('../../base/lib/es-utils')\n/*\n * Automatically detects browser device details\n */\nmodule.exports = {\n  init: (client) => {\n    client.config.beforeSend.unshift((report) => {\n      report.device = {\n        ...{\n          time: isoDate(),\n          locale: navigator.browserLanguage || navigator.systemLanguage || navigator.userLanguage || navigator.language,\n          userAgent: navigator.userAgent\n        },\n        ...report.device\n      }\n    })\n\n    client.beforeSession.push(session => { session.device = { userAgent: navigator.userAgent } })\n  }\n}\n","const { reduce } = require('../../base/lib/es-utils')\n\nmodule.exports = {\n  init: (client) => {\n    let html = ''\n    let DOMContentLoaded = false\n    const getHtml = () => document.documentElement.outerHTML\n    const originalLocation = window.location.href\n\n    const addInlineContent = report => {\n      const frame = report.stacktrace[0]\n      if (!frame || !frame.file || !frame.lineNumber) return frame\n      if (frame.file.replace(/#.*$/, '') !== originalLocation.replace(/#.*$/, '')) return frame\n      if (!DOMContentLoaded || !html) html = getHtml()\n      const htmlLines = [ '<!-- DOCUMENT START -->' ].concat(html.split('\\n'))\n      const { script, start } = extractScriptContent(htmlLines, frame.lineNumber - 1)\n      const code = reduce(script, (accum, line, i) => {\n        if (Math.abs((start + i + 1) - frame.lineNumber) > 10) return accum\n        accum[`${start + i + 1}`] = line\n        return accum\n      }, {})\n      frame.code = code\n      report.updateMetaData('script', { content: script.join('\\n') })\n    }\n\n    // get whatever HTML exists at this point in time\n    html = getHtml()\n\n    // then update it when the DOM content has loaded\n    document.onreadystatechange = () => {\n      // IE8 compatible alternative to document#DOMContentLoaded\n      if (document.readyState === 'interactive') {\n        html = getHtml()\n        DOMContentLoaded = true\n      }\n    }\n\n    client.config.beforeSend.unshift(addInlineContent)\n  }\n}\n\nconst scriptStartRe = /^.*<script.*?>/\nconst scriptEndRe = /<\\/script>.*$/\nconst extractScriptContent = module.exports.extractScriptContent = (lines, startLine) => {\n  // search down for </script>\n  let line = startLine\n  while (line < lines.length && !scriptEndRe.test(lines[line])) line++\n\n  // search up for <script>\n  const end = line\n  while (line > 0 && !scriptStartRe.test(lines[line])) line--\n  const start = line\n\n  // strip <script> tags so that lines just contain js content\n  const script = lines.slice(start, end + 1)\n  script[0] = script[0].replace(scriptStartRe, '')\n  script[script.length - 1] = script[script.length - 1].replace(scriptEndRe, '')\n\n  // return the array of lines, and the line number the script started at\n  return { script, start }\n}\n","/*\n * Prevent collection of user IPs\n */\nmodule.exports = {\n  init: (client) => {\n    if (client.config.collectUserIp) return\n    client.config.beforeSend.push(report => {\n      report.user = { id: '[NOT COLLECTED]', ...report.user }\n      report.request = { clientIp: '[NOT COLLECTED]', ...report.request }\n    })\n  }\n}\n","/*\n * Leaves breadcrumbs when navigation methods are called or events are emitted\n */\nmodule.exports = {\n  init: (client) => {\n    if (!('addEventListener' in window)) return\n\n    // returns a function that will drop a breadcrumb with a given name\n    const drop = name => () => client.leaveBreadcrumb(name, {}, 'navigation')\n\n    // simple drops – just names, no meta\n    window.addEventListener('pagehide', drop('Page hidden'), true)\n    window.addEventListener('pageshow', drop('Page shown'), true)\n    window.addEventListener('load', drop('Page loaded'), true)\n    window.document.addEventListener('DOMContentLoaded', drop('DOMContentLoaded'), true)\n    // some browsers like to emit popstate when the page loads, so only add the postate listener after that\n    window.addEventListener('load', () => window.addEventListener('popstate', drop('Navigated back'), true))\n\n    // hashchange has some metaData that we care about\n    window.addEventListener('hashchange', event => {\n      const metaData = event.oldURL\n        ? { from: relativeLocation(event.oldURL), to: relativeLocation(event.newURL), state: window.history.state }\n        : { to: relativeLocation(window.location.href) }\n      client.leaveBreadcrumb('Hash changed', metaData, 'navigation')\n    }, true)\n\n    // the only way to know about replaceState/pushState is to wrap them… >_<\n\n    if (window.history.replaceState) wrapHistoryFn(client, window.history, 'replaceState')\n    if (window.history.pushState) wrapHistoryFn(client, window.history, 'pushState')\n\n    client.leaveBreadcrumb('Bugsnag loaded', {}, 'navigation')\n  },\n  destroy: () => {\n    window.history.replaceState._restore()\n    window.history.pushState._restore()\n  },\n  configSchema: {\n    navigationBreadcrumbsEnabled: {\n      defaultValue: () => undefined,\n      validate: (value) => value === true || value === false || value === undefined,\n      message: '(boolean) navigationBreadcrumbsEnabled should be true or false'\n    }\n  }\n}\n\n// takes a full url like http://foo.com:1234/pages/01.html?yes=no#section-2 and returns\n// just the path and hash parts, e.g. /pages/01.html?yes=no#section-2\nconst relativeLocation = url => {\n  const a = document.createElement('A')\n  a.href = url\n  return `${a.pathname}${a.search}${a.hash}`\n}\n\nconst stateChangeToMetaData = (state, title, url) => {\n  const currentPath = relativeLocation(window.location.href)\n  return { title, state, prevState: window.history.state, to: url || currentPath, from: currentPath }\n}\n\nconst wrapHistoryFn = (client, target, fn) => {\n  const orig = target[fn]\n  target[fn] = (state, title, url) => {\n    client.leaveBreadcrumb(`History ${fn}`, stateChangeToMetaData(state, title, url), 'navigation')\n    // if throttle plugin is in use, refresh the event sent count\n    if (typeof client.refresh === 'function') client.refresh()\n    // if the client is operating in session-mode, a new route should trigger a new session\n    if (client.session) client.startSession()\n    orig.call(target, state, title, url)\n  }\n  target[fn]._restore = () => { target[fn] = orig }\n}\n","/*\n * Sets the report request: { url } to be the current href\n */\nmodule.exports = {\n  init: (client) => {\n    client.config.beforeSend.unshift(report => {\n      if (report.request && report.request.url) return\n      report.request = { ...report.request, url: window.location.href }\n    })\n  }\n}\n","const { map, isArray, includes } = require('../../base/lib/es-utils')\nconst inferReleaseStage = require('../../base/lib/infer-release-stage')\n\nmodule.exports = {\n  init: client => client.sessionDelegate(sessionDelegate)\n}\n\nconst sessionDelegate = {\n  startSession: client => {\n    const sessionClient = client\n    sessionClient.session = new client.BugsnagSession()\n\n    map(sessionClient.beforeSession, (fn) => fn(sessionClient))\n\n    const releaseStage = inferReleaseStage(sessionClient)\n\n    // exit early if the reports should not be sent on the current releaseStage\n    if (isArray(sessionClient.config.notifyReleaseStages) && !includes(sessionClient.config.notifyReleaseStages, releaseStage)) {\n      sessionClient._logger.warn(`Session not sent due to releaseStage/notifyReleaseStages configuration`)\n      return sessionClient\n    }\n\n    sessionClient._transport.sendSession(\n      sessionClient._logger,\n      sessionClient.config,\n      {\n        notifier: sessionClient.notifier,\n        device: sessionClient.device,\n        app: { ...{ releaseStage }, ...sessionClient.app },\n        sessions: [\n          {\n            id: sessionClient.session.id,\n            startedAt: sessionClient.session.startedAt,\n            user: sessionClient.user\n          }\n        ]\n      }\n    )\n\n    return sessionClient\n  }\n}\n","/*\n * Remove query strings (and fragments) from stacktraces\n */\nconst { map } = require('../../base/lib/es-utils')\n\nmodule.exports = {\n  init: (client) => {\n    client.config.beforeSend.push(report => {\n      report.stacktrace = map(report.stacktrace, frame => ({ ...frame, file: strip(frame.file) }))\n    })\n  }\n}\n\nconst strip = module.exports._strip = str =>\n  typeof str === 'string'\n    ? str.replace(/\\?.*$/, '').replace(/#.*$/, '')\n    : str\n","const ErrorStackParser = require('error-stack-parser')\nconst hasStack = require('../../base/lib/has-stack')\nconst { reduce } = require('../../base/lib/es-utils')\nconst isError = require('iserror')\n\n/*\n * Automatically notifies Bugsnag when window.onunhandledrejection is called\n */\nlet _listener\nmodule.exports = {\n  init: (client) => {\n    const listener = event => {\n      let error = event.reason\n      let isBluebird = false\n\n      if (event.detail && event.detail.reason) {\n        error = event.detail.reason\n        isBluebird = true\n      }\n\n      const handledState = {\n        severity: 'error',\n        unhandled: true,\n        severityReason: { type: 'unhandledPromiseRejection' }\n      }\n\n      let report\n      if (error && hasStack(error)) {\n        // if it quacks like an Error…\n        report = new client.BugsnagReport(error.name, error.message, ErrorStackParser.parse(error), handledState)\n        if (isBluebird) {\n          report.stacktrace = reduce(report.stacktrace, fixBluebirdStacktrace(error), [])\n        }\n      } else {\n        // if it doesn't…\n        const msg = 'Rejection reason was not an Error. See \"Promise\" tab for more detail.'\n        report = new client.BugsnagReport(\n          error && error.name ? error.name : 'UnhandledRejection',\n          error && error.message ? error.message : msg,\n          [],\n          handledState\n        )\n        // stuff the rejection reason into metaData, it could be useful\n        report.updateMetaData('promise', 'rejection reason', serializableReason(error))\n      }\n\n      client.notify(report)\n    }\n    if ('addEventListener' in window) {\n      window.addEventListener('unhandledrejection', listener)\n    } else {\n      window.onunhandledrejection = (reason, promise) => {\n        listener({ detail: { reason, promise } })\n      }\n    }\n    _listener = listener\n  },\n  destroy: () => {\n    if (_listener) {\n      if ('addEventListener' in window) {\n        window.removeEventListener('unhandledrejection', _listener)\n      } else {\n        window.onunhandledrejection = null\n      }\n    }\n    _listener = null\n  }\n}\n\nconst serializableReason = (err) => {\n  if (err === null || err === undefined) {\n    return 'undefined (or null)'\n  } else if (isError(err)) {\n    return {\n      [Object.prototype.toString.call(err)]: {\n        name: err.name,\n        message: err.message,\n        code: err.code,\n        stack: err.stack\n      }\n    }\n  } else {\n    return err\n  }\n}\n\n// The stack parser on bluebird stacks in FF get a suprious first frame:\n//\n// Error: derp\n//   b@http://localhost:5000/bluebird.html:22:24\n//   a@http://localhost:5000/bluebird.html:18:9\n//   @http://localhost:5000/bluebird.html:14:9\n//\n// results in\n//   […]\n//     0: Object { file: \"Error: derp\", method: undefined, lineNumber: undefined, … }\n//     1: Object { file: \"http://localhost:5000/bluebird.html\", method: \"b\", lineNumber: 22, … }\n//     2: Object { file: \"http://localhost:5000/bluebird.html\", method: \"a\", lineNumber: 18, … }\n//     3: Object { file: \"http://localhost:5000/bluebird.html\", lineNumber: 14, columnNumber: 9, … }\n//\n// so the following reduce/accumulator function removes such frames\n//\n// Bluebird pads method names with spaces so trim that too…\n// https://github.com/petkaantonov/bluebird/blob/b7f21399816d02f979fe434585334ce901dcaf44/src/debuggability.js#L568-L571\nconst fixBluebirdStacktrace = (error) => (accum, frame) => {\n  if (frame.file === error.toString()) return accum\n  if (frame.method) {\n    frame.method = frame.method.replace(/^\\s+/, '')\n  }\n  return accum.concat(frame)\n}\n","/*\n * Automatically notifies Bugsnag when window.onerror is called\n */\n\nmodule.exports = {\n  init: (client) => {\n    const onerror = (messageOrEvent, url, lineNo, charNo, error) => {\n      // Ignore errors with no info due to CORS settings\n      if (lineNo === 0 && /Script error\\.?/.test(messageOrEvent)) {\n        client._logger.warn('Ignoring cross-domain or eval script error. See https://docs.bugsnag.com/platforms/browsers/faq/#3-cross-origin-script-errors')\n        return\n      }\n\n      // any error sent to window.onerror is unhandled and has severity=error\n      const handledState = { severity: 'error', unhandled: true, severityReason: { type: 'unhandledException' } }\n\n      let report\n      if (error) {\n        if (error.name && error.message) {\n          report = new client.BugsnagReport(error.name, error.message, decorateStack(client.BugsnagReport.getStacktrace(error), url, lineNo, charNo), handledState)\n        } else {\n          report = new client.BugsnagReport('window.onerror', String(error), decorateStack(client.BugsnagReport.getStacktrace(error, 1), url, lineNo, charNo), handledState)\n          report.updateMetaData('window onerror', { error })\n        }\n      } else if ((typeof messageOrEvent === 'object' && messageOrEvent !== null) && !url && !lineNo && !charNo && !error) {\n        const name = messageOrEvent.type ? `Event: ${messageOrEvent.type}` : 'window.onerror'\n        const message = messageOrEvent.message || messageOrEvent.detail || ''\n        report = new client.BugsnagReport(name, message, client.BugsnagReport.getStacktrace(new Error(), 1).slice(1), handledState)\n        report.updateMetaData('window onerror', { event: messageOrEvent })\n      } else {\n        report = new client.BugsnagReport('window.onerror', String(messageOrEvent), decorateStack(client.BugsnagReport.getStacktrace(error, 1), url, lineNo, charNo), handledState)\n        report.updateMetaData('window onerror', { event: messageOrEvent })\n      }\n\n      client.notify(report)\n\n      if (typeof prevOnError === 'function') prevOnError(messageOrEvent, url, lineNo, charNo, error)\n    }\n\n    const prevOnError = window.onerror\n    window.onerror = onerror\n  }\n}\n\nconst decorateStack = (stack, url, lineNo, charNo) => {\n  const culprit = stack[0]\n  if (!culprit) return stack\n  if (!culprit.fileName) culprit.setFileName(url)\n  if (!culprit.lineNumber) culprit.setLineNumber(lineNo)\n  if (!culprit.columnNumber) {\n    if (charNo !== undefined) {\n      culprit.setColumnNumber(charNo)\n    } else if (window.event && window.event.errorCharacter) {\n      culprit.setColumnNumber(window.event && window.event.errorCharacter)\n    }\n  }\n  return stack\n}\n","const jsonStringify = require('fast-safe-stringify')\n\nmodule.exports = report => {\n  let payload = jsonStringify(report)\n  if (payload.length > 10e5) {\n    delete report.events[0].metaData\n    report.events[0].metaData = {\n      notifier:\n`WARNING!\nThe serialized payload was ${payload.length / 10e5}MB. The limit is 1MB.\nreport.metaData was stripped to make the payload of a deliverable size.`\n    }\n    payload = jsonStringify(report)\n    if (payload.length > 10e5) throw new Error('payload exceeded 1MB limit')\n  }\n  return payload\n}\n","const makePayload = require('./lib/payload')\nconst jsonStringify = require('fast-safe-stringify')\nconst { isoDate } = require('../../base/lib/es-utils')\n\nmodule.exports = {\n  name: 'XDomainRequest',\n  sendReport: (logger, config, report, cb = () => {}) => {\n    const url = `${config.endpoint}?apiKey=${encodeURIComponent(config.apiKey)}&payloadVersion=4.0&sentAt=${encodeURIComponent(isoDate())}`\n    const req = new window.XDomainRequest()\n    req.onload = function () {\n      cb(null, req.responseText)\n    }\n    req.open('POST', url)\n    setTimeout(() => {\n      try {\n        req.send(makePayload(report))\n      } catch (e) {\n        logger.error(e)\n      }\n    }, 0)\n  },\n  sendSession: (logger, config, session, cb = () => {}) => {\n    const url = `${config.sessionEndpoint}?apiKey=${encodeURIComponent(config.apiKey)}&payloadVersion=1.0&sentAt=${encodeURIComponent(isoDate())}`\n    const req = new window.XDomainRequest()\n    req.onload = function () {\n      cb(null, req.responseText)\n    }\n    req.open('POST', url)\n    setTimeout(() => {\n      try {\n        req.send(jsonStringify(session))\n      } catch (e) {\n        logger.error(e)\n      }\n    }, 0)\n  }\n}\n","const makePayload = require('./lib/payload')\nconst jsonStringify = require('fast-safe-stringify')\nconst { isoDate } = require('../../base/lib/es-utils')\n\nmodule.exports = {\n  name: 'XMLHttpRequest',\n  sendReport: (logger, config, report, cb = () => {}) => {\n    const url = config.endpoint\n    const req = new window.XMLHttpRequest()\n    req.onreadystatechange = function () {\n      if (req.readyState === window.XMLHttpRequest.DONE) cb(null, req.responseText)\n    }\n    req.open('POST', url)\n    req.setRequestHeader('Content-Type', 'application/json')\n    req.setRequestHeader('Bugsnag-Api-Key', report.apiKey || config.apiKey)\n    req.setRequestHeader('Bugsnag-Payload-Version', '4.0')\n    req.setRequestHeader('Bugsnag-Sent-At', isoDate())\n    try {\n      req.send(makePayload(report))\n    } catch (e) {\n      logger.error(e)\n    }\n  },\n  sendSession: (logger, config, session, cb = () => {}) => {\n    const url = config.sessionEndpoint\n    const req = new window.XMLHttpRequest()\n    req.onreadystatechange = function () {\n      if (req.readyState === window.XMLHttpRequest.DONE) cb(null, req.responseText)\n    }\n    req.open('POST', url)\n    req.setRequestHeader('Content-Type', 'application/json')\n    req.setRequestHeader('Bugsnag-Api-Key', config.apiKey)\n    req.setRequestHeader('Bugsnag-Payload-Version', '1.0')\n    req.setRequestHeader('Bugsnag-Sent-At', isoDate())\n    try {\n      req.send(jsonStringify(session))\n    } catch (e) {\n      logger.error(e)\n    }\n  }\n}\n","const name = 'Bugsnag JavaScript'\nconst version = '4.3.1'\nconst url = 'https://github.com/bugsnag/bugsnag-js'\n\nconst Client = require('../base/client')\nconst Report = require('../base/report')\nconst Session = require('../base/session')\nconst Breadcrumb = require('../base/breadcrumb')\nconst { map, reduce } = require('../base/lib/es-utils')\n\n// extend the base config schema with some browser-specific options\nconst schema = { ...require('../base/config').schema, ...require('./config') }\n\nconst pluginWindowOnerror = require('./plugins/window-onerror')\nconst pluginUnhandledRejection = require('./plugins/unhandled-rejection')\nconst pluginDevice = require('./plugins/device')\nconst pluginContext = require('./plugins/context')\nconst pluginRequest = require('./plugins/request')\nconst pluginThrottle = require('../base/plugins/throttle')\nconst pluginConsoleBreadcrumbs = require('./plugins/console-breadcrumbs')\nconst pluginNavigationBreadcrumbs = require('./plugins/navigation-breadcrumbs')\nconst pluginInteractionBreadcrumbs = require('./plugins/interaction-breadcrumbs')\nconst pluginInlineScriptContent = require('./plugins/inline-script-content')\nconst pluginSessions = require('./plugins/sessions')\nconst pluginIp = require('./plugins/ip')\nconst pluginStripQueryString = require('./plugins/strip-query-string')\n\nconst plugins = [\n  pluginWindowOnerror,\n  pluginUnhandledRejection,\n  pluginDevice,\n  pluginContext,\n  pluginRequest,\n  pluginThrottle,\n  pluginConsoleBreadcrumbs,\n  pluginNavigationBreadcrumbs,\n  pluginInteractionBreadcrumbs,\n  pluginInlineScriptContent,\n  pluginSessions,\n  pluginIp,\n  pluginStripQueryString\n]\n\nconst transports = {\n  'XDomainRequest': require('./transports/x-domain-request'),\n  'XMLHttpRequest': require('./transports/xml-http-request')\n}\n\nmodule.exports = (opts, userPlugins = []) => {\n  // handle very simple use case where user supplies just the api key as a string\n  if (typeof opts === 'string') opts = { apiKey: opts }\n\n  // support renamed option\n  if (opts.sessionTrackingEnabled) {\n    opts.autoCaptureSessions = opts.sessionTrackingEnabled\n  }\n\n  // allow plugins to augment the schema with their own options\n  const finalSchema = reduce([].concat(plugins).concat(userPlugins), (accum, plugin) => {\n    if (!plugin.configSchema) return accum\n    return { ...accum, ...plugin.configSchema }\n  }, schema)\n\n  const bugsnag = new Client({ name, version, url }, finalSchema)\n\n  // set transport based on browser capability (IE 8+9 have an XDomainRequest object)\n  bugsnag.transport(window.XDomainRequest ? transports.XDomainRequest : transports.XMLHttpRequest)\n\n  // set logger based on browser capability\n  if (typeof console !== 'undefined' && typeof console.debug === 'function') {\n    const logger = getPrefixedConsole()\n    bugsnag.logger(logger)\n  }\n\n  try {\n    // configure with user supplied options\n    // errors can be thrown here that prevent the lib from being in a useable state\n    bugsnag.configure(opts)\n  } catch (e) {\n    bugsnag._logger.warn(e)\n    if (e.errors) map(e.errors, bugsnag._logger.warn)\n    // rethrow. if there was an error with configuration\n    // the library is not going to work\n    throw e\n  }\n\n  // always-on browser-specific plugins\n  bugsnag.use(pluginDevice)\n  bugsnag.use(pluginContext)\n  bugsnag.use(pluginRequest)\n  bugsnag.use(pluginInlineScriptContent)\n  bugsnag.use(pluginThrottle)\n  bugsnag.use(pluginSessions)\n  bugsnag.use(pluginIp)\n  bugsnag.use(pluginStripQueryString)\n\n  // optional browser-specific plugins\n\n  if (bugsnag.config.autoNotify !== false) {\n    bugsnag.use(pluginWindowOnerror)\n    bugsnag.use(pluginUnhandledRejection)\n  }\n\n  if (inferBreadcrumbSetting(bugsnag.config, 'navigationBreadcrumbsEnabled')) {\n    bugsnag.use(pluginNavigationBreadcrumbs)\n  }\n\n  if (inferBreadcrumbSetting(bugsnag.config, 'interactionBreadcrumbsEnabled')) {\n    bugsnag.use(pluginInteractionBreadcrumbs)\n  }\n\n  // because console breadcrumbs play havoc with line numbers,\n  // if not explicitly enabled, only setup on non-development evironments\n  if (inferBreadcrumbSetting(bugsnag.config, 'consoleBreadcrumbsEnabled', false)) {\n    bugsnag.use(pluginConsoleBreadcrumbs)\n  }\n\n  // init user supplied plugins\n  map(userPlugins, (plugin) => bugsnag.use(plugin))\n\n  return bugsnag.config.autoCaptureSessions\n    ? bugsnag.startSession()\n    : bugsnag\n}\n\nconst getPrefixedConsole = () => {\n  const logger = {}\n  const consoleLog = console['log']\n  map([ 'debug', 'info', 'warn', 'error' ], (method) => {\n    const consoleMethod = console[method]\n    logger[method] = typeof consoleMethod === 'function'\n      ? consoleMethod.bind(console, '[bugsnag]')\n      : consoleLog.bind(console, '[bugsnag]')\n  })\n  return logger\n}\n\nconst inferBreadcrumbSetting = (config, val, defaultInDev = true) =>\n  typeof config[val] === 'boolean'\n    ? config[val]\n    : (config.autoBreadcrumbs &&\n        (defaultInDev || !/^dev(elopment)?$/.test(config.releaseStage))\n      )\n\n// Stub this value because this is what the type interface looks like\n// (types/bugsnag.d.ts). This is only an issue in Angular's development\n// mode as its TS/DI thingy attempts to use this value at runtime.\n// In most other situations, TS only uses the types at compile time.\nmodule.exports.Bugsnag = {\n  Client,\n  Report,\n  Session,\n  Breadcrumb\n}\n\n// Export a \"default\" property for compatibility with ESM imports\nmodule.exports['default'] = module.exports\n","\nreturn _$browser_12;\n\n});"]}