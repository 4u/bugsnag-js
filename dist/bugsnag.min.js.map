{"version":3,"sources":["node_modules/browser-pack-flat/_prelude","node_modules/fast-safe-stringify/index.js","browser/plugins/interaction-breadcrumbs.js","base/lib/es-utils.js","base/breadcrumb.js","base/lib/positive-int-check.js","base/config.js","base/lib/has-stack.js","node_modules/stackframe/stackframe.js","node_modules/error-stack-parser/error-stack-parser.js","node_modules/stack-generator/stack-generator.js","base/report.js","node_modules/iserror/index.js","base/client.js","base/plugins/throttle.js","browser/config.js","browser/plugins/console-breadcrumbs.js","browser/plugins/context.js","browser/plugins/device.js","browser/plugins/inline-script-content.js","browser/plugins/navigation-breadcrumbs.js","browser/plugins/request.js","browser/plugins/unhandled-rejection.js","browser/plugins/window-onerror.js","browser/transports/lib/payload.js","browser/transports/x-domain-request.js","browser/transports/xml-http-request.js","browser/index.js","node_modules/browser-pack-flat/_postlude"],"names":["f","exports","module","define","amd","window","global","self","this","bugsnag","stringify","obj","toJSON","forceDecirc","decirc","JSON","Circle","val","k","parent","count","stack","keys","len","i","j","exists","stackLen","length","push","key","Object","prototype","hasOwnProperty","call","pop","getNodeSelector","el","parts","tagName","id","className","split","join","document","querySelectorAll","Array","indexOf","e","parentNode","childNodes","index","truncate","value","slice","reduce","arr","fn","accum","_hasDontEnumBug","toString","propertyIsEnumerable","_dontEnums","_pad","n","_$esUtils_4","map","item","concat","filter","includes","x","result","prop","isArray","isoDate","d","Date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","__isoDate_1","BugsnagBreadcrumb","name","arguments","undefined","metaData","type","timestamp","_classCallCheck","_$BugsnagBreadcrumb_1","__includes_6","_$positiveIntCheck_6","parseInt","__filter_3","__reduce_3","__keys_3","__isArray_3","_$config_3","schema","apiKey","defaultValue","message","validate","appVersion","autoNotify","beforeSend","endpoint","notifyReleaseStages","releaseStage","maxBreadcrumbs","autoBreadcrumbs","mergeDefaults","opts","Error","errors","valid","_$hasStack_5","err","stacktrace","root","factory","_$stackframe_27","StackFrame","_isNumber","isNaN","parseFloat","isFinite","_capitalize","str","charAt","toUpperCase","substring","_getter","p","props","booleanProps","numericProps","stringProps","arrayProps","getArgs","args","setArgs","v","TypeError","getEvalOrigin","evalOrigin","setEvalOrigin","getFunctionName","getFileName","getLineNumber","getColumnNumber","Boolean","Number","String","_$errorStackParser_23","ErrorStackParser","FIREFOX_SAFARI_STACK_REGEXP","CHROME_IE_STACK_REGEXP","SAFARI_NATIVE_CODE_REGEXP","parse","error","parseOpera","match","parseV8OrIE","parseFFOrSafari","extractLocation","urlLike","exec","replace","line","tokens","locationParts","functionName","fileName","lineNumber","columnNumber","source","parseOpera9","parseOpera11","parseOpera10","lineRE","lines","argsRaw","functionCall","shift","_$stackGenerator_26","StackGenerator","backtrace","maxStackSize","curr","callee","test","RegExp","$1","caller","__reduce_8","__filter_8","BugsnagReport","errorClass","errorMessage","handledState","defaultHandledState","___classCallCheck_8","__isBugsnagReport","_ignored","_handledState","app","breadcrumbs","context","device","stringOrFallback","groupingHash","request","severity","frame","formatStackframe","user","ignore","isIgnored","updateMetaData","section","_updates","updates","removeMetaData","_extends","property","payloadVersion","exceptions","unhandled","severityReason","file","method","normaliseFunctionName","code","inProject","fallback","getStacktrace","errorFramesToSkip","generatedFramesToSkip","ensureReport","reportOrError","_$BugsnagReport_8","_$stringify_24","_$isError_25","__map_2","__reduce_2","__includes_2","__isArray_2","noop","BugsnagClient","notifier","configSchema","session","___classCallCheck_2","version","url","_configured","_transport","sendSession","sendReport","_logger","debug","info","warn","plugins","configure","config","___extends_2","validity","use","plugin","init","transport","t","logger","l","sid","leaveBreadcrumb","crumb","c","lastCrumb","notify","_normaliseError","normaliseError","_opts","report","originalSeverity","events","notifyArgs","hasNecessaryFields","_$BugsnagClient_2","_$throttle_7","client","maxEvents","refresh","_$config_9","location","host","__map_11","_$consoleBreadcrumbs_11","CONSOLE_LOG_METHODS","original","console","_len","_key","arg","stringified","apply","_restore","destroy","forEach","consoleBreadcrumbsEnabled","__filter_11","_$context_12","pathname","__isoDate_13","_$device_13","___extends_13","time","locale","navigator","browserLanguage","systemLanguage","userLanguage","language","userAgent","__reduce_14","_$inlineScriptContent_14","html","DOMContentLoaded","getHtml","documentElement","outerHTML","onreadystatechange","readyState","href","htmlLines","_extractScriptContent","extractScriptContent","script","start","Math","abs","content","startLine","end","_$interactionBreadcrumbs_15","addEventListener","event","targetText","targetSelector","getNodeText","target","log","interactionBreadcrumbsEnabled","text","textContent","innerText","_$navigationBreadcrumbs_16","drop","oldURL","from","relativeLocation","to","newURL","state","history","replaceState","wrapHistoryFn","pushState","navigationBreadcrumbsEnabled","a","createElement","search","hash","stateChangeToMetaData","title","currentPath","prevState","orig","_$request_17","___extends_17","_$unhandledRejection_18","reason","msg","_$windowOnerror_19","prevOnError","onerror","messageOrEvent","lineNo","charNo","decorateStack","detail","culprit","setFileName","setLineNumber","setColumnNumber","errorCharacter","_$payload_20","payload","_$xDomainRequest_21","cb","req","XDomainRequest","onload","responseText","open","send","_$xmlHttpRequest_22","XMLHttpRequest","DONE","setRequestHeader","__map_10","__reduce_10","__keys_10","___extends_10","window onerror","unhandled rejection","throttle","console breadcrumbs","navigation breadcrumbs","interaction breadcrumbs","inline script content","transports","_$browser_10","userPlugins","finalSchema","getPrefixedConsole","inferBreadcrumbSetting","consoleLog","consoleMethod","bind","defaultInDev"],"mappings":"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","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.bugsnag = f()}})(function(){var define,module,exports;\n","module.exports = stringify\nstringify.default = stringify\nfunction stringify (obj) {\n  if (obj !== null && typeof obj === 'object' && (typeof obj.toJSON !== 'function' || obj.toJSON.forceDecirc)) {\n    decirc(obj, '', [], null)\n  }\n  return JSON.stringify(obj)\n}\nfunction Circle (val, k, parent) {\n  this.val = val\n  this.k = k\n  this.parent = parent\n  this.count = 1\n}\nCircle.prototype.toJSON = function toJSON () {\n  if (--this.count === 0) {\n    this.parent[this.k] = this.val\n  }\n  return '[Circular]'\n}\nfunction decirc (val, k, stack, parent) {\n  var keys, len, i, j, exists, stackLen\n  if (typeof val !== 'object' || val === null) {\n    // not an object, nothing to do\n    return\n  } else if (val instanceof Circle) {\n    val.count++\n    return\n  } else if (typeof val.toJSON === 'function' && !val.toJSON.forceDecirc) {\n    return\n  } else if (parent) {\n    j = 0\n    exists = false\n    stackLen = stack.length\n    for (; j < stackLen; j++) {\n      if (stack[j] === val) {\n        exists = true\n        break\n      }\n    }\n    if (exists) {\n      parent[k] = new Circle(val, k, parent)\n      return\n    }\n  }\n  stack.push(val)\n  keys = []\n  for (var key in val) {\n    if (Object.prototype.hasOwnProperty.call(val, key)) keys.push(key)\n  }\n  len = keys.length\n  i = 0\n  for (; i < len; i++) {\n    k = keys[i]\n    decirc(val[k], k, stack, val)\n  }\n  stack.pop()\n}\n","/*\n * Leaves breadcrumbs when the user interacts with the DOM\n */\nmodule.exports = {\n  init: (client) => {\n    if (!('addEventListener' in window)) return\n\n    window.addEventListener('click', (event) => {\n      let targetText, targetSelector\n      try {\n        targetText = getNodeText(event.target)\n        targetSelector = getNodeSelector(event.target)\n      } catch (e) {\n        targetText = '[hidden]'\n        targetSelector = '[hidden]'\n        client._logger.log('Cross domain error when tracking click event. See https://docs.bugsnag.com/platforms/browsers/faq/#3-cross-origin-script-errors')\n      }\n      client.leaveBreadcrumb('UI click', { targetText, targetSelector }, 'user')\n    }, true)\n  },\n  configSchema: {\n    interactionBreadcrumbsEnabled: {\n      defaultValue: () => undefined,\n      validate: (value) => value === true || value === false || value === undefined,\n      message: '(boolean) interactionBreadcrumbsEnabled should be true or false'\n    }\n  }\n}\n\n// extract text content from a element\nconst getNodeText = el => {\n  let text = el.textContent || el.innerText || ''\n  if (!text && (el.type === 'submit' || el.type === 'button')) text = el.value\n  text = text.replace(/^\\s+|\\s+$/g, '') // trim whitespace\n  return truncate(text, 140)\n}\n\n// Create a label from tagname, id and css class of the element\nfunction getNodeSelector (el) {\n  const parts = [ el.tagName ]\n  if (el.id) parts.push('#' + el.id)\n  if (el.className && el.className.length) parts.push(`.${el.className.split(' ').join('.')}`)\n  // Can't get much more advanced with the current browser\n  if (!document.querySelectorAll || !Array.prototype.indexOf) return parts.join('')\n  try {\n    if (document.querySelectorAll(parts.join('')).length === 1) return parts.join('')\n  } catch (e) {\n    // Sometimes the query selector can be invalid just return it as-is\n    return parts.join('')\n  }\n  // try to get a more specific selector if this one matches more than one element\n  if (el.parentNode.childNodes.length > 1) {\n    const index = Array.prototype.indexOf.call(el.parentNode.childNodes, el) + 1\n    parts.push(`:nth-child(${index})`)\n  }\n  if (document.querySelectorAll(parts.join('')).length === 1) return parts.join('')\n  // try prepending the parent node selector\n  if (el.parentNode) return `${getNodeSelector(el.parentNode)} > ${parts.join('')}`\n  return parts.join('')\n}\n\nfunction truncate (value, length) {\n  const ommision = '(...)'\n  if (value && value.length <= length) return value\n  return value.slice(0, length - ommision.length) + ommision\n}\n","// minimal implementations of useful ES functionality\n\n// all we really need for arrays is reduce – everything else is just sugar!\n\n// Array#reduce\nconst reduce = (arr, fn, accum) => {\n  let val = accum\n  for (let i = 0, len = arr.length; i < len; i++) val = fn(val, arr[i], i, arr)\n  return val\n}\n\n// Array#filter\nconst filter = (arr, fn) =>\n  reduce(arr, (accum, item, i, arr) => !fn(item, i, arr) ? accum : accum.concat(item), [])\n\n// Array#map\nconst map = (arr, fn) =>\n  reduce(arr, (accum, item, i, arr) => accum.concat(fn(item, i, arr)), [])\n\n// Array#includes\nconst includes = (arr, x) =>\n  reduce(arr, (accum, item, i, arr) => accum === true || item === x, false)\n\nconst _hasDontEnumBug = !({ toString: null }).propertyIsEnumerable('toString')\nconst _dontEnums = [\n  'toString', 'toLocaleString', 'valueOf', 'hasOwnProperty',\n  'isPrototypeOf', 'propertyIsEnumerable', 'constructor'\n]\n\n// Object#keys\nconst keys = obj => {\n  // stripped down version of\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/Keys\n  const result = []\n  let prop\n  for (prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) result.push(prop)\n  }\n  if (!_hasDontEnumBug) return result\n  for (let i = 0, len = _dontEnums.length; i < len; i++) {\n    if (Object.prototype.hasOwnProperty.call(obj, _dontEnums[i])) result.push(_dontEnums[i])\n  }\n  return result\n}\n\n// Array#isArray\nconst isArray = obj => Object.prototype.toString.call(obj) === '[object Array]'\n\nconst _pad = n => n < 10 ? `0${n}` : n\n\n// Date#toISOString\nconst isoDate = () => {\n  // from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString\n  const d = new Date()\n  return d.getUTCFullYear() +\n    '-' + _pad(d.getUTCMonth() + 1) +\n    '-' + _pad(d.getUTCDate()) +\n    'T' + _pad(d.getUTCHours()) +\n    ':' + _pad(d.getUTCMinutes()) +\n    ':' + _pad(d.getUTCSeconds()) +\n    '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) +\n    'Z'\n}\n\nmodule.exports = { map, reduce, filter, includes, keys, isArray, isoDate }\n","const { isoDate } = require('./lib/es-utils')\n\nclass BugsnagBreadcrumb {\n  constructor (name = '[anonymous]', metaData = {}, type = 'manual', timestamp = isoDate()) {\n    this.type = type\n    this.name = name\n    this.metaData = metaData\n    this.timestamp = timestamp\n  }\n\n  toJSON () {\n    return {\n      type: this.type,\n      name: this.name,\n      timestamp: this.timestamp,\n      metaData: this.metaData\n    }\n  }\n}\n\n// force `fast-safe-stringify` to do its thing\n// https://github.com/davidmarkclements/fast-safe-stringify#tojson-support\nBugsnagBreadcrumb.prototype.toJSON.forceDecirc = true\n\nmodule.exports = BugsnagBreadcrumb\n","const { includes } = require('./es-utils')\n\nmodule.exports = value =>\n  includes([ 'undefined', 'number' ], typeof value) &&\n  parseInt('' + value, 10) === value &&\n  value > 0\n","const { filter, reduce, keys, isArray } = require('./lib/es-utils')\nconst positiveIntIfDefined = require('./lib/positive-int-check')\n\nmodule.exports.schema = {\n  apiKey: {\n    defaultValue: () => null,\n    message: '(string) apiKey is required',\n    validate: value => typeof value === 'string' && value.length\n  },\n  appVersion: {\n    defaultValue: () => null,\n    message: '(string) appVersion should have a value if supplied',\n    validate: value => value === null || (typeof value === 'string' && value.length)\n  },\n  autoNotify: {\n    defaultValue: () => true,\n    message: '(boolean) autoNotify should be true or false',\n    validate: value => value === true || value === false\n  },\n  beforeSend: {\n    defaultValue: () => [],\n    message: '(array[Function]) beforeSend should only contain functions',\n    validate: value => typeof value === 'function' || (isArray(value) && filter(value, f => typeof f === 'function').length === value.length)\n  },\n  endpoint: {\n    defaultValue: () => '//notify.bugsnag.com',\n    message: '(string) endpoint should be set',\n    validate: () => true\n  },\n  notifyReleaseStages: {\n    defaultValue: () => null,\n    message: '(array[string]) notifyReleaseStages should only contain strings',\n    validate: value => value === null || (isArray(value) && filter(value, f => typeof f === 'string').length === value.length)\n  },\n  releaseStage: {\n    defaultValue: () => 'production',\n    message: '(string) releaseStage should be set',\n    validate: value => typeof value === 'string' && value.length\n  },\n  maxBreadcrumbs: {\n    defaultValue: () => 20,\n    message: '(number) maxBreadcrumbs must be a number (≤40) if specified',\n    validate: value => value === 0 || (positiveIntIfDefined(value) && (value === undefined || value <= 40))\n  },\n  autoBreadcrumbs: {\n    defaultValue: () => true,\n    message: '(boolean) autoBreadcrumbs should be true or false',\n    validate: (value) => typeof value === 'boolean'\n  }\n}\n\nmodule.exports.mergeDefaults = (opts, schema) => {\n  if (!opts || !schema) throw new Error('schema.mergeDefaults(opts, schema): opts and schema objects are required')\n  return reduce(keys(schema), (accum, key) => {\n    accum[key] = opts[key] !== undefined ? opts[key] : schema[key].defaultValue()\n    return accum\n  }, {})\n}\n\nmodule.exports.validate = (opts, schema) => {\n  if (!opts || !schema) throw new Error('schema.mergeDefaults(opts, schema): opts and schema objects are required')\n  const errors = reduce(keys(schema), (accum, key) => {\n    if (schema[key].validate(opts[key])) return accum\n    return accum.concat({ key, message: schema[key].message, value: opts[key] })\n  }, [])\n  return { valid: !errors.length, errors }\n}\n","module.exports = err => !!err && (!!err.stack || !!err.stacktrace || !!err['opera#sourceloc'])\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function() {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function _capitalize(str) {\n        return str.charAt(0).toUpperCase() + str.substring(1);\n    }\n\n    function _getter(p) {\n        return function() {\n            return this[p];\n        };\n    }\n\n    var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];\n    var numericProps = ['columnNumber', 'lineNumber'];\n    var stringProps = ['fileName', 'functionName', 'source'];\n    var arrayProps = ['args'];\n\n    var props = booleanProps.concat(numericProps, stringProps, arrayProps);\n\n    function StackFrame(obj) {\n        if (obj instanceof Object) {\n            for (var i = 0; i < props.length; i++) {\n                if (obj.hasOwnProperty(props[i]) && obj[props[i]] !== undefined) {\n                    this['set' + _capitalize(props[i])](obj[props[i]]);\n                }\n            }\n        }\n    }\n\n    StackFrame.prototype = {\n        getArgs: function() {\n            return this.args;\n        },\n        setArgs: function(v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        getEvalOrigin: function() {\n            return this.evalOrigin;\n        },\n        setEvalOrigin: function(v) {\n            if (v instanceof StackFrame) {\n                this.evalOrigin = v;\n            } else if (v instanceof Object) {\n                this.evalOrigin = new StackFrame(v);\n            } else {\n                throw new TypeError('Eval Origin must be an Object or StackFrame');\n            }\n        },\n\n        toString: function() {\n            var functionName = this.getFunctionName() || '{anonymous}';\n            var args = '(' + (this.getArgs() || []).join(',') + ')';\n            var fileName = this.getFileName() ? ('@' + this.getFileName()) : '';\n            var lineNumber = _isNumber(this.getLineNumber()) ? (':' + this.getLineNumber()) : '';\n            var columnNumber = _isNumber(this.getColumnNumber()) ? (':' + this.getColumnNumber()) : '';\n            return functionName + args + fileName + lineNumber + columnNumber;\n        }\n    };\n\n    for (var i = 0; i < booleanProps.length; i++) {\n        StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);\n        StackFrame.prototype['set' + _capitalize(booleanProps[i])] = (function(p) {\n            return function(v) {\n                this[p] = Boolean(v);\n            };\n        })(booleanProps[i]);\n    }\n\n    for (var j = 0; j < numericProps.length; j++) {\n        StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);\n        StackFrame.prototype['set' + _capitalize(numericProps[j])] = (function(p) {\n            return function(v) {\n                if (!_isNumber(v)) {\n                    throw new TypeError(p + ' must be a Number');\n                }\n                this[p] = Number(v);\n            };\n        })(numericProps[j]);\n    }\n\n    for (var k = 0; k < stringProps.length; k++) {\n        StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);\n        StackFrame.prototype['set' + _capitalize(stringProps[k])] = (function(p) {\n            return function(v) {\n                this[p] = String(v);\n            };\n        })(stringProps[k]);\n    }\n\n    return StackFrame;\n}));\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('error-stack-parser', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.ErrorStackParser = factory(root.StackFrame);\n    }\n}(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+\\:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+\\:\\d+|\\(native\\))/m;\n    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code\\])?$/;\n\n    return {\n        /**\n         * Given an Error object, extract the most information from it.\n         *\n         * @param {Error} error object\n         * @return {Array} of StackFrames\n         */\n        parse: function ErrorStackParser$$parse(error) {\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n                return this.parseOpera(error);\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                return this.parseV8OrIE(error);\n            } else if (error.stack) {\n                return this.parseFFOrSafari(error);\n            } else {\n                throw new Error('Cannot parse given Error object');\n            }\n        },\n\n        // Separate line and column numbers from a string of the form: (URI:Line:Column)\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n            // Fail-fast but return locations like \"(native)\"\n            if (urlLike.indexOf(':') === -1) {\n                return [urlLike];\n            }\n\n            var regExp = /(.+?)(?:\\:(\\d+))?(?:\\:(\\d+))?$/;\n            var parts = regExp.exec(urlLike.replace(/[\\(\\)]/g, ''));\n            return [parts[1], parts[2] || undefined, parts[3] || undefined];\n        },\n\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(CHROME_IE_STACK_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                if (line.indexOf('(eval ') > -1) {\n                    // Throw away eval information until we implement stacktrace.js/stackframe#8\n                    line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^\\()]*)|(\\)\\,.*$)/g, '');\n                }\n                var tokens = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(').split(/\\s+/).slice(1);\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionName = tokens.join(' ') || undefined;\n                var fileName = ['eval', '<anonymous>'].indexOf(locationParts[0]) > -1 ? undefined : locationParts[0];\n\n                return new StackFrame({\n                    functionName: functionName,\n                    fileName: fileName,\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        },\n\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                // Throw away eval information until we implement stacktrace.js/stackframe#8\n                if (line.indexOf(' > eval') > -1) {\n                    line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval\\:\\d+\\:\\d+/g, ':$1');\n                }\n\n                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n                    // Safari eval frames only have function names and nothing else\n                    return new StackFrame({\n                        functionName: line\n                    });\n                } else {\n                    var tokens = line.split('@');\n                    var locationParts = this.extractLocation(tokens.pop());\n                    var functionName = tokens.join('@') || undefined;\n\n                    return new StackFrame({\n                        functionName: functionName,\n                        fileName: locationParts[0],\n                        lineNumber: locationParts[1],\n                        columnNumber: locationParts[2],\n                        source: line\n                    });\n                }\n            }, this);\n        },\n\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n                return this.parseOpera9(e);\n            } else if (!e.stack) {\n                return this.parseOpera10(e);\n            } else {\n                return this.parseOpera11(e);\n            }\n        },\n\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n            var lines = e.message.split('\\n');\n            var result = [];\n\n            for (var i = 2, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame({\n                        fileName: match[2],\n                        lineNumber: match[1],\n                        source: lines[i]\n                    }));\n                }\n            }\n\n            return result;\n        },\n\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n            var lines = e.stacktrace.split('\\n');\n            var result = [];\n\n            for (var i = 0, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(\n                        new StackFrame({\n                            functionName: match[3] || undefined,\n                            fileName: match[2],\n                            lineNumber: match[1],\n                            source: lines[i]\n                        })\n                    );\n                }\n            }\n\n            return result;\n        },\n\n        // Opera 10.65+ Error.stack very similar to FF/Safari\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);\n            }, this);\n\n            return filtered.map(function(line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionCall = (tokens.shift() || '');\n                var functionName = functionCall\n                        .replace(/<anonymous function(: (\\w+))?>/, '$2')\n                        .replace(/\\([^\\)]*\\)/g, '') || undefined;\n                var argsRaw;\n                if (functionCall.match(/\\(([^\\)]*)\\)/)) {\n                    argsRaw = functionCall.replace(/^[^\\(]+\\(([^\\)]*)\\)$/, '$1');\n                }\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ?\n                    undefined : argsRaw.split(',');\n\n                return new StackFrame({\n                    functionName: functionName,\n                    args: args,\n                    fileName: locationParts[0],\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        }\n    };\n}));\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stack-generator', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.StackGenerator = factory(root.StackFrame);\n    }\n}(this, function(StackFrame) {\n    return {\n        backtrace: function StackGenerator$$backtrace(opts) {\n            var stack = [];\n            var maxStackSize = 10;\n\n            if (typeof opts === 'object' && typeof opts.maxStackSize === 'number') {\n                maxStackSize = opts.maxStackSize;\n            }\n\n            var curr = arguments.callee;\n            while (curr && stack.length < maxStackSize) {\n                if (!curr['arguments']) {\n                  break;\n                }\n                // Allow V8 optimizations\n                var args = new Array(curr['arguments'].length);\n                for (var i = 0; i < args.length; ++i) {\n                    args[i] = curr['arguments'][i];\n                }\n                if (/function(?:\\s+([\\w$]+))+\\s*\\(/.test(curr.toString())) {\n                    stack.push(new StackFrame({functionName: RegExp.$1 || undefined, args: args}));\n                } else {\n                    stack.push(new StackFrame({args: args}));\n                }\n\n                try {\n                    curr = curr.caller;\n                } catch (e) {\n                    break;\n                }\n            }\n            return stack;\n        }\n    };\n}));\n","const ErrorStackParser = require('error-stack-parser')\nconst StackGenerator = require('stack-generator')\nconst hasStack = require('./lib/has-stack')\nconst { reduce, filter } = require('./lib/es-utils')\n\nclass BugsnagReport {\n  constructor (errorClass, errorMessage, stacktrace = [], handledState = defaultHandledState()) {\n    // duck-typing ftw >_<\n    this.__isBugsnagReport = true\n\n    this._ignored = false\n\n    // private (un)handled state\n    this._handledState = handledState\n\n    // setable props\n    this.app = undefined\n    this.apiKey = undefined\n    this.breadcrumbs = []\n    this.context = undefined\n    this.device = undefined\n    this.errorClass = stringOrFallback(errorClass, '[no error class]')\n    this.errorMessage = stringOrFallback(errorMessage, '[no error message]')\n    this.groupingHash = undefined\n    this.metaData = {}\n    this.request = undefined\n    this.severity = this._handledState.severity\n    this.stacktrace = reduce(stacktrace, (accum, frame) => {\n      const f = formatStackframe(frame)\n      // don't include a stackframe if none of its properties are defined\n      try {\n        if (JSON.stringify(f) === '{}') return accum\n        return accum.concat(f)\n      } catch (e) {\n        return accum\n      }\n    }, [])\n    this.user = undefined\n  }\n\n  ignore () {\n    this._ignored = true\n  }\n\n  isIgnored () {\n    return this._ignored\n  }\n\n  updateMetaData (section, ...args) {\n    if (!section) return this\n    let updates\n\n    // updateMetaData(\"section\", null) -> removes section\n    if (args[0] === null) return this.removeMetaData(section)\n\n    // updateMetaData(\"section\", \"property\", null) -> removes property from section\n    if (args[1] === null) return this.removeMetaData(section, args[0], args[1])\n\n    // normalise the two supported input types into object form\n    if (typeof args[0] === 'object') updates = args[0]\n    if (typeof args[0] === 'string') updates = { [args[0]]: args[1] }\n\n    // exit if we don't have an updates object at this point\n    if (!updates) return this\n\n    // ensure a section with this name exists\n    if (!this.metaData[section]) this.metaData[section] = {}\n\n    // merge the updates with the existing section\n    this.metaData[section] = { ...this.metaData[section], ...updates }\n\n    return this\n  }\n\n  removeMetaData (section, property) {\n    if (typeof section !== 'string') return this\n\n    // remove an entire section\n    if (!property) {\n      delete this.metaData[section]\n      return this\n    }\n\n    // remove a single property from a section\n    if (this.metaData[section]) {\n      delete this.metaData[section][property]\n      return this\n    }\n\n    return this\n  }\n\n  toJSON () {\n    return {\n      payloadVersion: '4',\n      exceptions: [\n        {\n          errorClass: this.errorClass,\n          message: this.errorMessage,\n          stacktrace: this.stacktrace,\n          type: 'browserjs'\n        }\n      ],\n      severity: this.severity,\n      unhandled: this._handledState.unhandled,\n      severityReason: this._handledState.severityReason,\n      app: this.app,\n      device: this.device,\n      breadcrumbs: this.breadcrumbs,\n      context: this.context,\n      user: this.user,\n      metaData: this.metaData,\n      groupingHash: this.groupingHash,\n      request: this.request\n    }\n  }\n}\n\n// force `fast-safe-stringify` to do its thing\n// https://github.com/davidmarkclements/fast-safe-stringify#tojson-support\nBugsnagReport.prototype.toJSON.forceDecirc = true\n\n// takes a stacktrace.js style stackframe (https://github.com/stacktracejs/stackframe)\n// and returns a Bugsnag compatible stackframe (https://docs.bugsnag.com/api/error-reporting/#json-payload)\nconst formatStackframe = frame => {\n  const f = {\n    file: frame.fileName,\n    method: normaliseFunctionName(frame.functionName),\n    lineNumber: frame.lineNumber,\n    columnNumber: frame.columnNumber,\n    code: undefined,\n    inProject: undefined\n  }\n  // calling notify() from chrome's terminal results in no file/method. This adds one.\n  if (f.lineNumber && !f.file && !f.method) {\n    f.file = 'global code'\n  }\n  return f\n}\n\nconst normaliseFunctionName = name => /^global code$/i.test(name) ? 'global code' : name\n\nconst defaultHandledState = () => ({\n  unhandled: false,\n  severity: 'warning',\n  severityReason: { type: 'handledException' }\n})\n\nconst stringOrFallback = (str, fallback) => typeof str === 'string' && str ? str : fallback\n\n// Helpers\n\nBugsnagReport.getStacktrace = (error, errorFramesToSkip = 0, generatedFramesToSkip = 0) => {\n  if (hasStack(error)) return ErrorStackParser.parse(error).slice(errorFramesToSkip)\n  // error wasn't provided or didn't have a stacktrace so try to walk the callstack\n  return filter(StackGenerator.backtrace(), frame =>\n    (frame.functionName || '').indexOf('StackGenerator$$') === -1\n  ).slice(1 + generatedFramesToSkip)\n}\n\nBugsnagReport.ensureReport = function (reportOrError, errorFramesToSkip = 0, generatedFramesToSkip = 0) {\n  // notify() can be called with a Report object. In this case no action is required\n  if (reportOrError.__isBugsnagReport) return reportOrError\n  try {\n    const stacktrace = BugsnagReport.getStacktrace(reportOrError, errorFramesToSkip, 1 + generatedFramesToSkip)\n    return new BugsnagReport(reportOrError.name, reportOrError.message, stacktrace)\n  } catch (e) {\n    return new BugsnagReport(reportOrError.name, reportOrError.message, [])\n  }\n}\n\nmodule.exports = BugsnagReport\n","\n/**\n * Expose `isError`.\n */\n\nmodule.exports = isError;\n\n/**\n * Test whether `value` is error object.\n *\n * @param {*} value\n * @returns {boolean}\n */\n\nfunction isError(value) {\n  switch (Object.prototype.toString.call(value)) {\n    case '[object Error]': return true;\n    case '[object Exception]': return true;\n    case '[object DOMException]': return true;\n    default: return value instanceof Error;\n  }\n}\n","const config = require('./config')\nconst BugsnagReport = require('./report')\nconst BugsnagBreadcrumb = require('./breadcrumb')\nconst { map, reduce, includes, isArray } = require('./lib/es-utils')\nconst jsonStringify = require('fast-safe-stringify')\nconst isError = require('iserror')\n\nconst noop = () => {}\n\nclass BugsnagClient {\n  constructor (notifier, configSchema = config.schema, session = null) {\n    if (!notifier) throw new Error('new BugsnagClient(notifier, configSchema) requires `notifier` argument')\n    if (!notifier.name || !notifier.version || !notifier.url) {\n      throw new Error('new BugsnagClient(notifier, configSchema) - `notifier` requires: `{ name, version, url }`')\n    }\n\n    // notifier id\n    this.notifier = notifier\n\n    // config\n    this.configSchema = configSchema\n\n    // configure() should be called before notify()\n    this._configured = false\n\n    // i/o\n    this._transport = { name: 'NULL_TRANSPORT', sendSession: noop, sendReport: noop }\n    this._logger = { debug: noop, info: noop, warn: noop, error: noop }\n\n    // plugins\n    this.plugins = []\n\n    this.session = session\n    this.breadcrumbs = []\n\n    // setable props\n    this.app = {}\n    this.context = undefined\n    this.device = undefined\n    this.metaData = undefined\n    this.request = undefined\n    this.user = {}\n\n    // expose internal constructors\n    this.BugsnagReport = BugsnagReport\n    this.BugsnagBreadcrumb = BugsnagBreadcrumb\n  }\n\n  configure (opts = {}) {\n    this.config = config.mergeDefaults({ ...this.config, ...opts }, this.configSchema)\n    const validity = config.validate(this.config, this.configSchema)\n    if (!validity.valid === true) {\n      const err = new Error('Bugsnag configuration error')\n      err.errors = map(validity.errors, (err) => `${err.key} ${err.message} \\n  ${err.value}`)\n      throw err\n    }\n    if (typeof this.config.beforeSend === 'function') this.config.beforeSend = [ this.config.beforeSend ]\n    if (this.config.appVersion !== null) this.app.version = this.config.appVersion\n    this._configured = true\n    this._logger.debug(`Loaded!`)\n    return this\n  }\n\n  use (plugin) {\n    this.plugins.push(plugin)\n    return plugin.init(this)\n  }\n\n  transport (t) {\n    this._transport = t\n    return this\n  }\n\n  logger (l, sid) {\n    this._logger = l\n    return this\n  }\n\n  leaveBreadcrumb (name, metaData, type, timestamp) {\n    if (!this._configured) throw new Error('Bugsnag must be configured before calling leaveBreadcrumb()')\n\n    // coerce bad values so that the defaults get set\n    name = name || undefined\n    type = typeof type === 'string' ? type : undefined\n    timestamp = typeof timestamp === 'string' ? timestamp : undefined\n    metaData = typeof metaData === 'object' && metaData !== null ? metaData : undefined\n\n    // if no name and no metaData, usefulness of this crumb is questionable at best so discard\n    if (typeof name !== 'string' && !metaData) return\n\n    const crumb = new BugsnagBreadcrumb(name, metaData, type, timestamp)\n    const c = jsonStringify(crumb)\n    const lastCrumb = this.breadcrumbs[this.breadcrumbs.length - 1]\n    const isDupe = lastCrumb ? c === jsonStringify(lastCrumb) : false\n\n    // no duplicates\n    if (isDupe) return\n\n    // push the valid crumb onto the queue and maintain the length\n    this.breadcrumbs.push(crumb)\n    if (this.breadcrumbs.length > this.config.maxBreadcrumbs) {\n      this.breadcrumbs = this.breadcrumbs.slice(this.breadcrumbs.length - this.config.maxBreadcrumbs)\n    }\n\n    return this\n  }\n\n  notify (error, opts = {}) {\n    if (!this._configured) throw new Error('Bugsnag must be configured before calling report()')\n\n    // releaseStage can be set via config.releaseStage or client.app.releaseStage\n    const releaseStage = this.app && typeof this.app.releaseStage === 'string' ? this.app.releaseStage : this.config.releaseStage\n\n    // ensure we have an error (or a reasonable object representation of an error)\n    let { err, errorFramesToSkip, _opts } = normaliseError(error, opts, this._logger)\n    if (_opts) opts = _opts\n\n    // if we have something falsey at this point, report usage error\n    if (!err) {\n      this._logger.warn(`Usage error. notify() called with no \"error\" parameter`)\n      err = new Error('Bugsnag usage error. notify() called with no \"error\" parameter')\n    }\n\n    // ensure opts is an object\n    if (typeof opts !== 'object' || opts === null) opts = {}\n\n    // create a report from the error, if it isn't one already\n    const report = BugsnagReport.ensureReport(err, errorFramesToSkip, 1)\n\n    report.app = { ...{ releaseStage }, ...report.app, ...this.app }\n    report.context = report.context || opts.context || this.context || undefined\n    report.device = { ...report.device, ...this.device, ...opts.device }\n    report.request = { ...report.request, ...this.request, ...opts.request }\n    report.user = { ...report.user, ...this.user, ...opts.user }\n    report.metaData = { ...report.metaData, ...this.metaData, ...opts.metaData }\n    report.breadcrumbs = this.breadcrumbs.slice(0)\n\n    // set severity if supplied\n    if (opts.severity !== undefined) {\n      report.severity = opts.severity\n      report._handledState.severityReason = { type: 'userSpecifiedSeverity' }\n    }\n\n    // exit early if the reports should not be sent on the current releaseStage\n    if (isArray(this.config.notifyReleaseStages) && !includes(this.config.notifyReleaseStages, releaseStage)) {\n      this._logger.warn(`Report not sent due to releaseStage/notifyReleaseStages configuration`)\n      return false\n    }\n\n    const originalSeverity = report.severity\n\n    const beforeSend = [].concat(opts.beforeSend).concat(this.config.beforeSend)\n    const preventSend = reduce(beforeSend, (accum, fn) => {\n      if (accum === true) return true\n      if (typeof fn === 'function' && fn(report) === false) return true\n      if (report.isIgnored()) return true\n      return false\n    }, false)\n\n    if (preventSend) {\n      this._logger.debug(`Report not sent due to beforeSend callback`)\n      return false\n    }\n\n    // only leave a crumb for the error if actually got sent\n    if (this.config.autoBreadcrumbs) {\n      this.leaveBreadcrumb(report.errorClass, {\n        errorClass: report.errorClass,\n        errorMessage: report.errorMessage,\n        severity: report.severity,\n        stacktrace: report.stacktrace\n      }, 'error')\n    }\n\n    if (originalSeverity !== report.severity) {\n      report._handledState.severityReason = { type: 'userCallbackSetSeverity' }\n    }\n\n    this._transport.sendReport(this._logger, this.config, {\n      apiKey: report.apiKey || this.config.apiKey,\n      notifier: this.notifier,\n      events: [ report ]\n    })\n\n    return true\n  }\n}\n\nconst normaliseError = (error, opts, logger) => {\n  let err\n  let errorFramesToSkip = 0\n  let _opts\n  switch (typeof error) {\n    case 'string':\n      if (typeof opts === 'string') {\n        // ≤v3 used to have a notify('ErrorName', 'Error message') interface\n        // report usage/deprecation errors if this function is called like that\n        logger.warn(`Usage error. notify() called with (string, string) but expected (error, object)`)\n        err = new Error('Bugsnag usage error. notify() called with (string, string) but expected (error, object)')\n        _opts = { metaData: { notifier: { notifyArgs: [ error, opts ] } } }\n      } else {\n        err = new Error(String(error))\n        errorFramesToSkip += 2\n      }\n      break\n    case 'number':\n    case 'boolean':\n      err = new Error(String(error))\n      break\n    case 'function':\n      logger.warn(`Usage error. notify() called with a function as \"error\" parameter`)\n      err = new Error('Bugsnag usage error. notify() called with a function as \"error\" parameter')\n      break\n    case 'object':\n      if (error !== null && (isError(error) || error.__isBugsnagReport)) {\n        err = error\n      } else if (error !== null && hasNecessaryFields(error)) {\n        err = new Error(error.message || error.errorMessage)\n        err.name = error.name || error.errorClass\n        errorFramesToSkip += 2\n      } else {\n        logger.warn(`Usage error. notify() called with an unsupported object as \"error\" parameter. Supply an Error or { name, message } object.`)\n        err = new Error('Bugsnag usage error. notify() called with an unsupported object as \"error\" parameter. Supply an Error or { name, message } object.')\n      }\n      break\n  }\n  return { err, errorFramesToSkip, _opts }\n}\n\nconst hasNecessaryFields = error =>\n  (typeof error.name === 'string' || typeof error.errorClass === 'string') &&\n  (typeof error.message === 'string' || typeof error.errorMessage === 'string')\n\nmodule.exports = BugsnagClient\n","const positiveIntIfDefined = require('../lib/positive-int-check')\n\n/*\n * Throttles and dedupes error reports\n */\n\nmodule.exports = {\n  init: (client) => {\n    // track sent events for each init of the plugin\n    let n = 0\n\n    // add beforeSend hook\n    client.config.beforeSend.push((report) => {\n      // have max events been sent already?\n      if (n >= client.config.maxEvents) return report.ignore()\n      n++\n    })\n\n    client.refresh = () => { n = 0 }\n  },\n  configSchema: {\n    maxEvents: {\n      defaultValue: () => 10,\n      message: '(number) maxEvents must be a positive integer ≤100',\n      validate: val => positiveIntIfDefined(val) && val < 100\n    }\n  }\n}\n","module.exports = {\n  releaseStage: {\n    defaultValue: () => {\n      if (/^localhost(:\\d+)?$/.test(window.location.host)) return 'development'\n      return 'production'\n    },\n    message: '(string) releaseStage should be set',\n    validate: value => typeof value === 'string' && value.length\n  }\n}\n","const { map, filter } = require('../../base/lib/es-utils')\n\n/*\n * Leaves breadcrumbs when console log methods are called\n */\nmodule.exports = {\n  init: (client) => {\n    map(CONSOLE_LOG_METHODS, method => {\n      const original = console[method]\n      console[method] = (...args) => {\n        client.leaveBreadcrumb('Console output', {\n          severity: /^group/.test(method) ? 'log' : method,\n          message: map(args, arg => {\n            // do the best/simplest stringification of each argument\n            let stringified = String(arg)\n            // unless it stringifies to [object Object], use the toString() value\n            if (stringified !== '[object Object]') return stringified\n            // otherwise attempt to JSON stringify (with indents/spaces)\n            try { stringified = JSON.stringify(arg, null, 2) } catch (e) {}\n            // any errors, fallback to [object Object]\n            return stringified\n          }).join('\\n')\n        }, 'log')\n        original.apply(console, args)\n      }\n      console[method]._restore = () => { console[method] = original }\n    })\n  },\n  destroy: () => CONSOLE_LOG_METHODS.forEach(method => {\n    if (typeof console[method]._restore === 'function') console[method]._restore()\n  }),\n  configSchema: {\n    consoleBreadcrumbsEnabled: {\n      defaultValue: () => undefined,\n      validate: (value) => value === true || value === false || value === undefined,\n      message: '(boolean) consoleBreadcrumbsEnabled should be true or false'\n    }\n  }\n}\n\nconst CONSOLE_LOG_METHODS = filter([ 'log', 'debug', 'info', 'warn', 'error' ], method =>\n  typeof console !== 'undefined' && typeof console[method] === 'function'\n)\n","/*\n * Sets the default context to be the current URL\n */\nmodule.exports = {\n  init: (client) => {\n    client.config.beforeSend.push(report => {\n      if (report.context) return\n      report.context = window.location.pathname\n    })\n  }\n}\n","const { isoDate } = require('../../base/lib/es-utils')\n/*\n * Automatically detects browser device details\n */\nmodule.exports = {\n  init: (client) => {\n    client.config.beforeSend.push((report) => {\n      report.device = {\n        ...{\n          time: isoDate(),\n          locale: navigator.browserLanguage || navigator.systemLanguage || navigator.userLanguage || navigator.language,\n          userAgent: navigator.userAgent\n        },\n        ...report.device\n      }\n    })\n  }\n}\n","const { reduce } = require('../../base/lib/es-utils')\n\nmodule.exports = {\n  init: (client) => {\n    let html = ''\n    let DOMContentLoaded = false\n    const getHtml = () => document.documentElement.outerHTML\n\n    const addInlineContent = report => {\n      const frame = report.stacktrace[0]\n      if (!frame || !frame.file || !frame.lineNumber) return frame\n      if (frame.file.replace(/#.*$/) !== window.location.href.replace(/#.*$/)) return frame\n      if (!DOMContentLoaded || !html) html = getHtml()\n      const htmlLines = [ '<!-- DOCUMENT START -->' ].concat(html.split('\\n'))\n      const { script, start } = extractScriptContent(htmlLines, frame.lineNumber - 1)\n      const code = reduce(script, (accum, line, i) => {\n        if (Math.abs((start + i + 1) - frame.lineNumber) > 10) return accum\n        accum[`${start + i + 1}`] = line\n        return accum\n      }, {})\n      frame.code = code\n      report.updateMetaData('script', { content: script.join('\\n') })\n    }\n\n    // get whatever HTML exists at this point in time\n    html = getHtml()\n\n    // then update it when the DOM content has loaded\n    document.onreadystatechange = () => {\n      // IE8 compatible alternative to document#DOMContentLoaded\n      if (document.readyState === 'interactive') {\n        html = getHtml()\n        DOMContentLoaded = true\n      }\n    }\n\n    client.config.beforeSend.push(addInlineContent)\n  }\n}\n\nconst extractScriptContent = (lines, startLine) => {\n  // search down for </script>\n  let line = startLine\n  while (line < lines.length && !/<\\/script>/.test(lines[line])) line++\n\n  // search up for <script>\n  const end = line\n  while (line > 0 && !/<script.*>/.test(lines[line])) line--\n  const start = line\n\n  // strip <script> tags so that lines just contain js content\n  const script = lines.slice(start, end + 1)\n  script[0] = script[0].replace(/^.*<script.*>/, '')\n  script[script.length - 1] = script[script.length - 1].replace(/<\\/script>.*$/, '')\n\n  // return the array of lines, and the line number the script started at\n  return { script, start }\n}\n","/*\n * Leaves breadcrumbs when navigation methods are called or events are emitted\n */\nmodule.exports = {\n  init: (client) => {\n    if (!('addEventListener' in window)) return\n\n    // returns a function that will drop a breadcrumb with a given name\n    const drop = name => () => client.leaveBreadcrumb(name, {}, 'navigation')\n\n    // simple drops – just names, no meta\n    window.addEventListener('pagehide', drop('Page hidden'), true)\n    window.addEventListener('pageshow', drop('Page shown'), true)\n    window.addEventListener('load', drop('Page loaded'), true)\n    window.document.addEventListener('DOMContentLoaded', drop('DOMContentLoaded'), true)\n    // some browsers like to emit popstate when the page loads, so only add the postate listener after that\n    window.addEventListener('load', () => window.addEventListener('popstate', drop('Navigated back'), true))\n\n    // hashchange has some metaData that we care about\n    window.addEventListener('hashchange', event => {\n      const metaData = event.oldURL\n        ? { from: relativeLocation(event.oldURL), to: relativeLocation(event.newURL), state: window.history.state }\n        : { to: relativeLocation(window.location.href) }\n      client.leaveBreadcrumb('Hash changed', metaData, 'navigation')\n    }, true)\n\n    // the only way to know about replaceState/pushState is to wrap them… >_<\n\n    if (window.history.replaceState) wrapHistoryFn(client, window.history, 'replaceState')\n    if (window.history.pushState) wrapHistoryFn(client, window.history, 'pushState')\n\n    client.leaveBreadcrumb('Bugsnag loaded', {}, 'navigation')\n  },\n  destroy: () => {\n    window.history.replaceState._restore()\n    window.history.pushState._restore()\n  },\n  configSchema: {\n    navigationBreadcrumbsEnabled: {\n      defaultValue: () => undefined,\n      validate: (value) => value === true || value === false || value === undefined,\n      message: '(boolean) navigationBreadcrumbsEnabled should be true or false'\n    }\n  }\n}\n\n// takes a full url like http://foo.com:1234/pages/01.html?yes=no#section-2 and returns\n// just the path and hash parts, e.g. /pages/01.html?yes=no#section-2\nconst relativeLocation = url => {\n  const a = document.createElement('A')\n  a.href = url\n  return `${a.pathname}${a.search}${a.hash}`\n}\n\nconst stateChangeToMetaData = (state, title, url) => {\n  const currentPath = relativeLocation(window.location.href)\n  return { title, state, prevState: window.history.state, to: url || currentPath, from: currentPath }\n}\n\nconst wrapHistoryFn = (client, target, fn) => {\n  const orig = target[fn]\n  target[fn] = (state, title, url) => {\n    client.leaveBreadcrumb(`History ${fn}`, stateChangeToMetaData(state, title, url), 'navigation')\n    // if throttle plugin is in use, refresh the event sent count\n    if (typeof client.refresh === 'function') client.refresh()\n    orig.call(target, state, title, url)\n  }\n  target[fn]._restore = () => { target[fn] = orig }\n}\n","/*\n * Sets the report request: { url } to be the current href\n */\nmodule.exports = {\n  init: (client) => {\n    client.config.beforeSend.push(report => {\n      if (report.request && report.request.url) return\n      report.request = { ...report.request, url: window.location.href }\n    })\n  }\n}\n","const ErrorStackParser = require('error-stack-parser')\nconst hasStack = require('../../base/lib/has-stack')\n\n/*\n * Automatically notifies Bugsnag when window.onunhandledrejection is called\n */\n\nmodule.exports = {\n  init: (client) => {\n    // only attach for browsers that suppport promises\n    if (!('onunhandledrejection' in window)) return\n\n    window.addEventListener('unhandledrejection', (event) => {\n      const error = event.reason\n      const handledState = { severity: 'error', unhandled: true, severityReason: { type: 'unhandledPromiseRejection' } }\n\n      let report\n      if (error && hasStack(error)) {\n        // if it quacks like an Error…\n        report = new client.BugsnagReport(error.name, error.message, ErrorStackParser.parse(error), handledState)\n      } else {\n        // if it doesn't…\n        const msg = typeof error === 'string' ? error : 'Unhandled promise rejection'\n        const err = new Error(msg)\n        err.type = 'UnhandledRejection'\n        report = new client.BugsnagReport(err.type, err.message, ErrorStackParser.parse(err), handledState)\n        // stuff the rejection reason into metaData, it could be useful\n        report.updateMetaData('promise', 'rejection reason', error)\n      }\n\n      client.notify(report)\n    })\n  }\n}\n","/*\n * Automatically notifies Bugsnag when window.onerror is called\n */\n\nmodule.exports = {\n  init: (client) => {\n    const onerror = (messageOrEvent, url, lineNo, charNo, error) => {\n      // Ignore errors with no info due to CORS settings\n      if (lineNo === 0 && /Script error\\.?/.test(messageOrEvent)) {\n        client._logger.warn('Ignoring cross-domain or eval script error. See https://docs.bugsnag.com/platforms/browsers/faq/#3-cross-origin-script-errors')\n        return\n      }\n\n      // any error sent to window.onerror is unhandled and has severity=error\n      const handledState = { severity: 'error', unhandled: true, severityReason: { type: 'unhandledException' } }\n\n      let report\n      if (error) {\n        report = new client.BugsnagReport(error.name, error.message, decorateStack(client.BugsnagReport.getStacktrace(error), url, lineNo, charNo), handledState)\n      } else if ((typeof messageOrEvent === 'object' && messageOrEvent !== null) && !url && !lineNo && !charNo && !error) {\n        const name = messageOrEvent.type ? `Event: ${messageOrEvent.type}` : 'window.onerror'\n        const message = messageOrEvent.message || messageOrEvent.detail || ''\n        report = new client.BugsnagReport(name, message, client.BugsnagReport.getStacktrace(new Error(), 1).slice(1), handledState)\n        report.updateMetaData('window onerror', { event: messageOrEvent })\n      } else {\n        report = new client.BugsnagReport('window.onerror', messageOrEvent, decorateStack(client.BugsnagReport.getStacktrace(error, 1), url, lineNo, charNo), handledState)\n        report.updateMetaData('window onerror', { event: messageOrEvent })\n      }\n\n      client.notify(report)\n\n      if (typeof prevOnError === 'function') prevOnError(messageOrEvent, url, lineNo, charNo, error)\n    }\n\n    const prevOnError = window.onerror\n    window.onerror = onerror\n  }\n}\n\nconst decorateStack = (stack, url, lineNo, charNo) => {\n  const culprit = stack[0]\n  if (!culprit) return stack\n  if (!culprit.fileName) culprit.setFileName(url)\n  if (!culprit.lineNumber) culprit.setLineNumber(lineNo)\n  if (!culprit.columnNumber) {\n    if (charNo !== undefined) {\n      culprit.setColumnNumber(charNo)\n    } else if (window.event && window.event.errorCharacter) {\n      culprit.setColumnNumber(window.event && window.event.errorCharacter)\n    }\n  }\n  return stack\n}\n","const jsonStringify = require('fast-safe-stringify')\n\nmodule.exports = report => {\n  let payload = jsonStringify(report)\n  if (payload.length > 10e5) {\n    delete report.events[0].metaData\n    report.events[0].metaData = {\n      notifier:\n`WARNING!\nThe serialized payload was ${payload.length / 10e5}MB. The limit is 1MB.\nreport.metaData was stripped to make the payload of a deliverable size.`\n    }\n    payload = jsonStringify(report)\n    if (payload.length > 10e5) throw new Error('payload exceeded 1MB limit')\n  }\n  return payload\n}\n","const makePayload = require('./lib/payload')\n\nmodule.exports = {\n  name: 'XDomainRequest',\n  sendReport: (logger, config, report, cb = () => {}) => {\n    const url = config.endpoint\n    const req = new window.XDomainRequest()\n    req.onload = function () {\n      cb(null, req.responseText)\n    }\n    req.open('POST', url)\n    try {\n      req.send(makePayload(report))\n    } catch (e) {\n      logger.error(e)\n    }\n  }\n}\n","const makePayload = require('./lib/payload')\n\nmodule.exports = {\n  name: 'XMLHttpRequest',\n  sendReport: (logger, config, report, cb = () => {}) => {\n    const url = config.endpoint\n    const req = new window.XMLHttpRequest()\n    req.onreadystatechange = function () {\n      if (req.readyState === window.XMLHttpRequest.DONE) cb(null, req.responseText)\n    }\n    req.open('POST', url)\n    req.setRequestHeader('content-type', 'application/json')\n    try {\n      req.send(makePayload(report))\n    } catch (e) {\n      logger.error(e)\n    }\n  }\n}\n","const name = 'Bugsnag JavaScript'\nconst version = '4.0.3'\nconst url = 'https://github.com/bugsnag/bugsnag-js'\n\nconst Client = require('../base/client')\nconst { map, reduce, keys } = require('../base/lib/es-utils')\n\n// extend the base config schema with some browser-specific options\nconst schema = { ...require('../base/config').schema, ...require('./config') }\n\nconst plugins = {\n  'window onerror': require('./plugins/window-onerror'),\n  'unhandled rejection': require('./plugins/unhandled-rejection'),\n  'device': require('./plugins/device'),\n  'context': require('./plugins/context'),\n  'request': require('./plugins/request'),\n  'throttle': require('../base/plugins/throttle'),\n  'console breadcrumbs': require('./plugins/console-breadcrumbs'),\n  'navigation breadcrumbs': require('./plugins/navigation-breadcrumbs'),\n  'interaction breadcrumbs': require('./plugins/interaction-breadcrumbs'),\n  'inline script content': require('./plugins/inline-script-content')\n}\n\nconst transports = {\n  'XDomainRequest': require('./transports/x-domain-request'),\n  'XMLHttpRequest': require('./transports/xml-http-request')\n}\n\nmodule.exports = (opts, userPlugins = []) => {\n  // handle very simple use case where user supplies just the api key as a string\n  if (typeof opts === 'string') opts = { apiKey: opts }\n\n  // allow plugins to augment the schema with their own options\n  const finalSchema = reduce([].concat(map(keys(plugins), k => plugins[k])).concat(userPlugins), (accum, plugin) => {\n    if (!plugin.configSchema) return accum\n    return { ...accum, ...plugin.configSchema }\n  }, schema)\n\n  const bugsnag = new Client({ name, version, url }, finalSchema)\n\n  // set transport based on browser capability (IE 8+9 have an XDomainRequest object)\n  bugsnag.transport(window.XDomainRequest ? transports.XDomainRequest : transports.XMLHttpRequest)\n\n  // set logger based on browser capability\n  if (typeof console !== 'undefined' && typeof console.debug === 'function') {\n    const logger = getPrefixedConsole()\n    bugsnag.logger(logger)\n  }\n\n  try {\n    // configure with user supplied options\n    // errors can be thrown here that prevent the lib from being in a useable state\n    bugsnag.configure(opts)\n  } catch (e) {\n    bugsnag._logger.warn(e)\n    if (e.errors) map(e.errors, bugsnag._logger.warn)\n    // rethrow. if there was an error with configuration\n    // the library is not going to work\n    throw e\n  }\n\n  // always-on browser-specific plugins\n  bugsnag.use(plugins['device'])\n  bugsnag.use(plugins['context'])\n  bugsnag.use(plugins['request'])\n  bugsnag.use(plugins['inline script content'])\n  bugsnag.use(plugins['throttle'])\n\n  // optional browser-specific plugins\n\n  if (bugsnag.config.autoNotify !== false) {\n    bugsnag.use(plugins['window onerror'])\n    bugsnag.use(plugins['unhandled rejection'])\n  }\n\n  if (inferBreadcrumbSetting(bugsnag.config, 'navigationBreadcrumbsEnabled')) {\n    bugsnag.use(plugins['navigation breadcrumbs'])\n  }\n\n  if (inferBreadcrumbSetting(bugsnag.config, 'interactionBreadcrumbsEnabled')) {\n    bugsnag.use(plugins['interaction breadcrumbs'])\n  }\n\n  // because console breadcrumbs play havoc with line numbers,\n  // if not explicitly enabled, only setup on non-development evironments\n  if (inferBreadcrumbSetting(bugsnag.config, 'consoleBreadcrumbsEnabled', false)) {\n    bugsnag.use(plugins['console breadcrumbs'])\n  }\n\n  // init user supplied plugins\n  map(userPlugins, (plugin) => bugsnag.use(plugin))\n\n  return bugsnag\n}\n\nconst getPrefixedConsole = () => {\n  const logger = {}\n  const consoleLog = console['log']\n  map([ 'debug', 'info', 'warn', 'error' ], (method) => {\n    const consoleMethod = console[method]\n    logger[method] = typeof consoleMethod === 'function'\n      ? consoleMethod.bind(console, '[bugsnag]')\n      : consoleLog.bind(console, '[bugsnag]')\n  })\n  return logger\n}\n\nconst inferBreadcrumbSetting = (config, val, defaultInDev = true) =>\n  typeof config[val] === 'boolean'\n    ? config[val]\n    : (config.autoBreadcrumbs &&\n        (defaultInDev || !/^dev(elopment)?$/.test(config.releaseStage))\n      )\n\nmodule.exports['default'] = module.exports\n","\nreturn _$browser_10;\n\n});"]}